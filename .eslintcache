[{"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\App.js":"1","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Register\\index.js":"2","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Basket\\index.js":"3","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ShowMore\\index.js":"4","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Checkout\\Item\\index.js":"5","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\CheckOutPage\\index.js":"6","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Footer\\index.js":"7","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Administrator\\index.js":"8","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\OrdersPage\\index.js":"9","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\ProductInfo\\index.js":"10","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Menus\\index.js":"11","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\forms\\Selections\\index.js":"12","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\AdminBar\\index.js":"13","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Panel\\index.js":"14","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\NavB\\index.js":"15","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ProductsResults\\index.js":"16","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\ForgotPass\\index.js":"17","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\FormCont\\index.js":"18","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\CreateAcc\\index.js":"19","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\OrderInformation\\index.js":"20","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\setUps\\MainPageSetUp.js":"21","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Profile\\index.js":"22","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\setUps\\HomePageSetUp.js":"23","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\forms\\Input\\index.js":"24","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\stripePayment\\publicKeyStripe.js":"25","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\customHooks\\adminAuthentication.js":"26","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\customHooks\\index.js":"27","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\customHooks\\userAuthentication.js":"28","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Checkout\\index.js":"29","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\LogIn\\index.js":"30","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\hComponent\\UserAuthNeeded.js":"31","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\firebase\\utilation.js":"32","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\firebase\\configure.js":"33","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.actions.js":"34","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\rootSaga.js":"35","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\index.js":"36","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\hComponent\\AdminAuthNeeded.js":"37","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Contact\\index.js":"38","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Home\\index.js":"39","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\HomeComponent\\index.js":"40","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\SignIn\\index.js":"41","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\createStore.js":"42","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\setUps\\AdminPageSetUp.js":"43","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ResetPass\\index.js":"44","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Browse\\index.js":"45","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ProductsResults\\EachProduct\\index.js":"46","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\PopUp\\index.js":"47","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\PreviousOrders\\index.js":"48","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\rootReducer.js":"49","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\PaymentForm\\index.js":"50","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\forms\\Button\\index.js":"51","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\Service\\index.js":"52","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\Orders\\orders.sagas.js":"53","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\Cart\\cart.utils.js":"54","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.types.js":"55","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.sagas.js":"56","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.reducer.js":"57","C:\\Backups\\react\\src\\index.js":"58","C:\\Backups\\react\\src\\setUps\\AdminPageSetUp.js":"59","C:\\Backups\\react\\src\\redux\\rootReducer.js":"60","C:\\Backups\\react\\src\\webPages\\Contact\\index.js":"61","C:\\Backups\\react\\src\\webPages\\ForgotPass\\index.js":"62","C:\\Backups\\react\\src\\redux\\User\\user.sagas.js":"63","C:\\Backups\\react\\src\\components\\NavB\\index.js":"64","C:\\Backups\\react\\src\\redux\\Orders\\orders.types.js":"65","C:\\Backups\\react\\src\\components\\LogIn\\index.js":"66","C:\\Backups\\react\\src\\Service\\index.js":"67","C:\\Backups\\react\\src\\customHooks\\adminAuthentication.js":"68","C:\\Backups\\react\\src\\components\\Checkout\\Item\\index.js":"69","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\index.js":"70","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\setUps\\HomePageSetUp.js":"71","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.actions.js":"72","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\hComponent\\AdminAuthNeeded.js":"73","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Home\\index.js":"74","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\ForgotPass\\index.js":"75","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.reducer.js":"76","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Footer\\index.js":"77","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.types.js":"78","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\PopUp\\index.js":"79","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\Service\\index.js":"80","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\forms\\Button\\index.js":"81","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ProductsResults\\EachProduct\\index.js":"82","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\NavB\\index.js":"83","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ShowMore\\index.js":"84","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Administrator\\index.js":"85","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\App.js":"86","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\HomeComponent\\index.js":"87","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\setUps\\MainPageSetUp.js":"88","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\CheckOutPage\\index.js":"89","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\customHooks\\index.js":"90","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.utils.js":"91","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\CreateAcc\\index.js":"92","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ResetPass\\index.js":"93","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\customHooks\\adminAuthentication.js":"94","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Checkout\\Item\\index.js":"95","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\forms\\Selections\\index.js":"96","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Panel\\index.js":"97","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Checkout\\index.js":"98","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\setUps\\AdminPageSetUp.js":"99","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ProductsResults\\index.js":"100","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Profile\\index.js":"101","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\PaymentForm\\index.js":"102","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\hComponent\\UserAuthNeeded.js":"103","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\customHooks\\userAuthentication.js":"104","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\ProductDetails\\index.js":"105","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.actions.js":"106","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.sagas.js":"107","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.helpers.js":"108","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.reducer.js":"109","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\firebase\\configure.js":"110","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\forms\\Input\\index.js":"111","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.selectors.js":"112","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\rootReducer.js":"113","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\rootSaga.js":"114","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\LogIn\\index.js":"115","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\PreviousOrders\\index.js":"116","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ProductInfos\\index.js":"117","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\ProductInfo\\index.js":"118","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Register\\index.js":"119","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\OrdersPage\\index.js":"120","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.sagas.js":"121","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Orders\\orders.reducer.js":"122","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Orders\\orders.actions.js":"123","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.helpers.js":"124","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\firebase\\utilation.js":"125","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.types.js":"126","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\FormCont\\index.js":"127","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Contact\\index.js":"128","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\AboutUs\\index.js":"129","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\SignIn\\index.js":"130","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Terms\\index.js":"131","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\OrderInformation\\index.js":"132","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Orders\\orders.helpers.js":"133","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Menus\\index.js":"134","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\AdminBar\\index.js":"135","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\stripePayment\\publicKeyStripe.js":"136","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.reducer.js":"137","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\createStore.js":"138","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Browse\\index.js":"139"},{"size":8664,"mtime":1614465935546,"results":"140","hashOfConfig":"141"},{"size":504,"mtime":1614204318501,"results":"142","hashOfConfig":"141"},{"size":635,"mtime":1614434445793,"results":"143","hashOfConfig":"141"},{"size":717,"mtime":1614020902463,"results":"144","hashOfConfig":"141"},{"size":3647,"mtime":1614434258147,"results":"145","hashOfConfig":"141"},{"size":1180,"mtime":1614440709744,"results":"146","hashOfConfig":"141"},{"size":594,"mtime":1614013649328,"results":"147","hashOfConfig":"141"},{"size":6259,"mtime":1614253867109,"results":"148","hashOfConfig":"141"},{"size":2363,"mtime":1614203562949,"results":"149","hashOfConfig":"141"},{"size":2316,"mtime":1614204022142,"results":"150","hashOfConfig":"141"},{"size":1154,"mtime":1614462037226,"results":"151","hashOfConfig":"141"},{"size":1800,"mtime":1614462189207,"results":"152","hashOfConfig":"141"},{"size":1321,"mtime":1614012534703,"results":"153","hashOfConfig":"141"},{"size":1340,"mtime":1614259322556,"results":"154","hashOfConfig":"141"},{"size":2019,"mtime":1614478946892,"results":"155","hashOfConfig":"141"},{"size":4948,"mtime":1614254482387,"results":"156","hashOfConfig":"141"},{"size":607,"mtime":1614225145351,"results":"157","hashOfConfig":"141"},{"size":939,"mtime":1614015546824,"results":"158","hashOfConfig":"141"},{"size":5552,"mtime":1614467053983,"results":"159","hashOfConfig":"141"},{"size":3828,"mtime":1614260846805,"results":"160","hashOfConfig":"141"},{"size":1087,"mtime":1614461120949,"results":"161","hashOfConfig":"141"},{"size":1290,"mtime":1614024484410,"results":"162","hashOfConfig":"141"},{"size":949,"mtime":1614461115838,"results":"163","hashOfConfig":"141"},{"size":854,"mtime":1614462158235,"results":"164","hashOfConfig":"141"},{"size":305,"mtime":1614104320593,"results":"165","hashOfConfig":"141"},{"size":1450,"mtime":1614106042895,"results":"166","hashOfConfig":"141"},{"size":340,"mtime":1614107043598,"results":"167","hashOfConfig":"141"},{"size":1039,"mtime":1614106868054,"results":"168","hashOfConfig":"141"},{"size":5166,"mtime":1614434360436,"results":"169","hashOfConfig":"141"},{"size":4378,"mtime":1614467271051,"results":"170","hashOfConfig":"141"},{"size":555,"mtime":1614107760404,"results":"171","hashOfConfig":"141"},{"size":2603,"mtime":1614463474164,"results":"172","hashOfConfig":"141"},{"size":516,"mtime":1614110203253,"results":"173","hashOfConfig":"141"},{"size":2343,"mtime":1614468658187,"results":"174","hashOfConfig":"141"},{"size":314,"mtime":1609285266630,"results":"175","hashOfConfig":"141"},{"size":1890,"mtime":1614463291304,"results":"176","hashOfConfig":"141"},{"size":589,"mtime":1614108285196,"results":"177","hashOfConfig":"141"},{"size":652,"mtime":1614435308270,"results":"178","hashOfConfig":"141"},{"size":664,"mtime":1614201291164,"results":"179","hashOfConfig":"141"},{"size":2576,"mtime":1614199984329,"results":"180","hashOfConfig":"141"},{"size":438,"mtime":1614204974276,"results":"181","hashOfConfig":"141"},{"size":614,"mtime":1612225934830,"results":"182","hashOfConfig":"141"},{"size":1857,"mtime":1614466102524,"results":"183","hashOfConfig":"141"},{"size":3496,"mtime":1614466576368,"results":"184","hashOfConfig":"141"},{"size":487,"mtime":1614248035152,"results":"185","hashOfConfig":"141"},{"size":2921,"mtime":1614251878555,"results":"186","hashOfConfig":"141"},{"size":1161,"mtime":1614025238556,"results":"187","hashOfConfig":"141"},{"size":4171,"mtime":1614260467403,"results":"188","hashOfConfig":"141"},{"size":667,"mtime":1612225984415,"results":"189","hashOfConfig":"141"},{"size":15229,"mtime":1614441205318,"results":"190","hashOfConfig":"141"},{"size":764,"mtime":1614462106956,"results":"191","hashOfConfig":"141"},{"size":855,"mtime":1614098116818,"results":"192","hashOfConfig":"141"},{"size":1732,"mtime":1609429112321,"results":"193","hashOfConfig":"141"},{"size":1536,"mtime":1607718437977,"results":"194","hashOfConfig":"141"},{"size":822,"mtime":1614468649972,"results":"195","hashOfConfig":"141"},{"size":5771,"mtime":1614473087597,"results":"196","hashOfConfig":"141"},{"size":849,"mtime":1614468663606,"results":"197","hashOfConfig":"141"},{"size":1890,"mtime":1614463291304,"results":"198","hashOfConfig":"199"},{"size":1857,"mtime":1614466102524,"results":"200","hashOfConfig":"199"},{"size":667,"mtime":1612225984415,"results":"201","hashOfConfig":"199"},{"size":652,"mtime":1614435308270,"results":"202","hashOfConfig":"199"},{"size":607,"mtime":1614225145351,"results":"203","hashOfConfig":"199"},{"size":5771,"mtime":1614473087597,"results":"204","hashOfConfig":"199"},{"size":2019,"mtime":1614478946892,"results":"205","hashOfConfig":"199"},{"size":343,"mtime":1609284382425,"results":"206","hashOfConfig":"199"},{"size":4378,"mtime":1614467271051,"results":"207","hashOfConfig":"199"},{"size":855,"mtime":1614098116818,"results":"208","hashOfConfig":"199"},{"size":1450,"mtime":1614106042895,"results":"209","hashOfConfig":"199"},{"size":3647,"mtime":1614434258147,"results":"210","hashOfConfig":"199"},{"size":1890,"mtime":1614463291304,"results":"211","hashOfConfig":"212"},{"size":949,"mtime":1614724157192,"results":"213","hashOfConfig":"212"},{"size":2343,"mtime":1614468658187,"results":"214","hashOfConfig":"212"},{"size":589,"mtime":1614108285196,"results":"215","hashOfConfig":"212"},{"size":664,"mtime":1614201291164,"results":"216","hashOfConfig":"212"},{"size":607,"mtime":1614225145351,"results":"217","hashOfConfig":"212"},{"size":913,"mtime":1618684827818,"results":"218","hashOfConfig":"212"},{"size":594,"mtime":1614013649328,"results":"219","hashOfConfig":"212"},{"size":353,"mtime":1614727188188,"results":"220","hashOfConfig":"212"},{"size":1174,"mtime":1614704570804,"results":"221","hashOfConfig":"212"},{"size":855,"mtime":1618714782638,"results":"222","hashOfConfig":"212"},{"size":764,"mtime":1614462106956,"results":"223","hashOfConfig":"212"},{"size":3010,"mtime":1614729142136,"results":"224","hashOfConfig":"212"},{"size":5019,"mtime":1619752240305,"results":"225","hashOfConfig":"212"},{"size":717,"mtime":1614703484460,"results":"226","hashOfConfig":"212"},{"size":14386,"mtime":1616171604491,"results":"227","hashOfConfig":"212"},{"size":9757,"mtime":1618169567330,"results":"228","hashOfConfig":"212"},{"size":4240,"mtime":1618149377315,"results":"229","hashOfConfig":"212"},{"size":1087,"mtime":1614461120949,"results":"230","hashOfConfig":"212"},{"size":1180,"mtime":1614440709744,"results":"231","hashOfConfig":"212"},{"size":340,"mtime":1614107043598,"results":"232","hashOfConfig":"212"},{"size":3532,"mtime":1619234699423,"results":"233","hashOfConfig":"212"},{"size":6102,"mtime":1620307708388,"results":"234","hashOfConfig":"212"},{"size":3496,"mtime":1614466576368,"results":"235","hashOfConfig":"212"},{"size":1450,"mtime":1614106042895,"results":"236","hashOfConfig":"212"},{"size":3647,"mtime":1614434258147,"results":"237","hashOfConfig":"212"},{"size":1800,"mtime":1614462189207,"results":"238","hashOfConfig":"212"},{"size":1348,"mtime":1614705246697,"results":"239","hashOfConfig":"212"},{"size":5166,"mtime":1614434360436,"results":"240","hashOfConfig":"212"},{"size":1857,"mtime":1614466102524,"results":"241","hashOfConfig":"212"},{"size":4956,"mtime":1614706231956,"results":"242","hashOfConfig":"212"},{"size":1290,"mtime":1614024484410,"results":"243","hashOfConfig":"212"},{"size":15755,"mtime":1620307691223,"results":"244","hashOfConfig":"212"},{"size":561,"mtime":1618693524031,"results":"245","hashOfConfig":"212"},{"size":1039,"mtime":1614106868054,"results":"246","hashOfConfig":"212"},{"size":504,"mtime":1616599669600,"results":"247","hashOfConfig":"212"},{"size":1622,"mtime":1619185143841,"results":"248","hashOfConfig":"212"},{"size":3704,"mtime":1619188766703,"results":"249","hashOfConfig":"212"},{"size":4486,"mtime":1619187766855,"results":"250","hashOfConfig":"212"},{"size":514,"mtime":1614728399727,"results":"251","hashOfConfig":"212"},{"size":516,"mtime":1614110203253,"results":"252","hashOfConfig":"212"},{"size":854,"mtime":1614462158235,"results":"253","hashOfConfig":"212"},{"size":1444,"mtime":1619234977741,"results":"254","hashOfConfig":"212"},{"size":1443,"mtime":1619235872122,"results":"255","hashOfConfig":"212"},{"size":314,"mtime":1609285266630,"results":"256","hashOfConfig":"212"},{"size":4616,"mtime":1616599513951,"results":"257","hashOfConfig":"212"},{"size":4171,"mtime":1616170746881,"results":"258","hashOfConfig":"212"},{"size":4676,"mtime":1618150161013,"results":"259","hashOfConfig":"212"},{"size":2553,"mtime":1616599816711,"results":"260","hashOfConfig":"212"},{"size":504,"mtime":1614204318501,"results":"261","hashOfConfig":"212"},{"size":2523,"mtime":1620307653125,"results":"262","hashOfConfig":"212"},{"size":5771,"mtime":1614473087597,"results":"263","hashOfConfig":"212"},{"size":538,"mtime":1609429547422,"results":"264","hashOfConfig":"212"},{"size":650,"mtime":1609280163151,"results":"265","hashOfConfig":"212"},{"size":474,"mtime":1606855001368,"results":"266","hashOfConfig":"212"},{"size":2603,"mtime":1614463474164,"results":"267","hashOfConfig":"212"},{"size":196,"mtime":1607660567930,"results":"268","hashOfConfig":"212"},{"size":939,"mtime":1614015546824,"results":"269","hashOfConfig":"212"},{"size":1222,"mtime":1618173000074,"results":"270","hashOfConfig":"212"},{"size":2542,"mtime":1618172776748,"results":"271","hashOfConfig":"212"},{"size":438,"mtime":1614204974276,"results":"272","hashOfConfig":"212"},{"size":3368,"mtime":1618172628004,"results":"273","hashOfConfig":"212"},{"size":3828,"mtime":1614260846805,"results":"274","hashOfConfig":"212"},{"size":2406,"mtime":1619182011096,"results":"275","hashOfConfig":"212"},{"size":1154,"mtime":1614462037226,"results":"276","hashOfConfig":"212"},{"size":1321,"mtime":1614012534703,"results":"277","hashOfConfig":"212"},{"size":305,"mtime":1614104320593,"results":"278","hashOfConfig":"212"},{"size":1962,"mtime":1619234271088,"results":"279","hashOfConfig":"212"},{"size":1071,"mtime":1619235329575,"results":"280","hashOfConfig":"212"},{"size":487,"mtime":1614248035152,"results":"281","hashOfConfig":"212"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cozl1m",{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"313"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"286"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"301"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"383"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"313"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a7u7s6",{"filePath":"418","messages":"419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"442"},"1mfalqb",{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"451"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"481"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"454"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"442"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"454"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"502"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"505"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"502"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"454"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"505"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"454"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"528"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"534"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"502"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"454"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"562"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"566"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"566"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"454"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"454"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"562"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"448"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\App.js",["613"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Register\\index.js",[],["614","615"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Basket\\index.js",["616"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ShowMore\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Checkout\\Item\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\CheckOutPage\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Footer\\index.js",[],["617","618"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Administrator\\index.js",["619","620"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addProductStart,\r\n  fetchProductsStart,\r\n  deleteProductStart,\r\n} from \"./../../redux/Products/products.actions\";\r\nimport \"./adminPage.scss\";\r\nimport PopUpForm from \"../../components/PopUp\";\r\nimport Input from \"./../../components/forms/Input\";\r\nimport DropDown from \"../../components/forms/Selections\";\r\nimport Buttons from \"./../../components/forms/Button\";\r\nimport ShowMore from \"./../../components/ShowMore\";\r\n\r\nconst mapState = ({ productsData }) => ({\r\n  products: productsData.products,\r\n});\r\n\r\nconst Admin = (props) => {\r\n  const { products } = useSelector(mapState);\r\n  const dispatch = useDispatch();\r\n  const [hideModal, setHideModal] = useState(true);\r\n  const [productCategory, setProductCategory] = useState(\"tv's\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productThumbnail, setProductThumbnail] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(0);\r\n\r\n  const { data, queryDoc, isLastPage } = products;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductsStart());\r\n  }, []);\r\n\r\n  const toggleModal = () => setHideModal(!hideModal);\r\n\r\n  const configModal = {\r\n    hideModal,\r\n    toggleModal,\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setProductCategory(\"tv's\");\r\n    setProductName(\"\");\r\n    setProductThumbnail(\"\");\r\n    setProductPrice(0);\r\n    setHideModal(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      addProductStart({\r\n        productCategory,\r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n      })\r\n    );\r\n    resetForm();\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    dispatch(\r\n      fetchProductsStart({\r\n        startAfterDoc: queryDoc,\r\n\r\n        persistProducts: data,\r\n      })\r\n    );\r\n  };\r\n  const configureLoadMore = {\r\n    onLoadMoreEvt: handleLoadMore,\r\n  };\r\n  return (\r\n    <div className=\"Admin\">\r\n      <div className=\"callToActions\">\r\n        <ul>\r\n          <li>\r\n            <Buttons onClick={() => toggleModal()}>Add new product</Buttons>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <PopUpForm {...configModal}>\r\n        <div className=\"addNewProductForm\">\r\n          <form onSubmit={handleSubmit}>\r\n            <h2>Add new product</h2>\r\n\r\n            <DropDown\r\n              label=\"Category\"\r\n              options={[\r\n                {\r\n                  value: \"tv's\",\r\n                  name: \"TV's\",\r\n                },\r\n                {\r\n                  value: \"phones\",\r\n                  name: \"Phones\",\r\n                },\r\n                {\r\n                  value: \"laptops\",\r\n                  name: \"Laptops\",\r\n                },\r\n                {\r\n                  value: \"accessories\",\r\n                  name: \"Accessories\",\r\n                },\r\n              ]}\r\n              handleChange={(e) => setProductCategory(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              value={productName}\r\n              handleChange={(e) => setProductName(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              label=\"Main image URL\"\r\n              type=\"url\"\r\n              value={productThumbnail}\r\n              handleChange={(e) => setProductThumbnail(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              label=\"Price\"\r\n              type=\"number\"\r\n              min=\"0.00\"\r\n              max=\"10000.00\"\r\n              step=\"0.01\"\r\n              value={productPrice}\r\n              handleChange={(e) => setProductPrice(e.target.value)}\r\n            />\r\n\r\n            {/* <CKEditor\r\n              onChange={(evt) => setProductDesc(evt.editor.getData())}\r\n            /> */}\r\n\r\n            <br />\r\n\r\n            <Buttons type=\"submit\">Add product</Buttons>\r\n          </form>\r\n        </div>\r\n      </PopUpForm>\r\n\r\n      <div className=\"manageProducts\">\r\n        <table border=\"0\" cellPadding=\"0 \" cellSpacing=\"0\">\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                <h1>Manage Products</h1>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <table\r\n                  className=\"results\"\r\n                  border=\"0\"\r\n                  cellPadding=\"10 \"\r\n                  cellSpacing=\"0\"\r\n                >\r\n                  <tbody>\r\n                    {Array.isArray(data) &&\r\n                      data.length > 0 &&\r\n                      data.map((product, index) => {\r\n                        const {\r\n                          productName,\r\n                          productThumbnail,\r\n                          productPrice,\r\n                          documentID,\r\n                        } = product;\r\n                        return (\r\n                          <tr>\r\n                            <td>\r\n                              <img className=\"thumb\" src={productThumbnail} />\r\n                            </td>\r\n                            <td>{productName}</td>\r\n                            <td>£{productPrice}</td>\r\n                            <td>\r\n                              <Buttons\r\n                                onClick={() =>\r\n                                  dispatch(deleteProductStart(documentID))\r\n                                }\r\n                              >\r\n                                Delete\r\n                              </Buttons>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <table border=\"0\" cellPadding=\"10 \" cellSpacing=\"0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        {!isLastPage && <ShowMore {...configureLoadMore} />}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n",["621","622"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\OrdersPage\\index.js",["623"],"//this page contains code for  order:orderID page which includes details about the order.\r\n\r\n//do not confuse this page with the order history page - This file contains code specifucaslly for the extended order history- more info about each of your order rather than overview of all orders.\r\n//IMPORTS\r\n\r\n//import react to use react componenet/ import useeffect used after page is redred to fetch order details.\r\nimport React, { useEffect } from \"react\";\r\n//import out order actions - fetches order details.\r\nimport { getOrderDetailsStart } from \"../../redux/Orders/orders.actions\";\r\n//useParams allows the return of an object of key/value pairs of URL parameters.\r\nimport { useParams } from \"react-router-dom\";\r\n//useSelector is a function that takes the current state as an argument and will return any data you want from it- in this case the order details.\r\n//import useDispatch from react-redux library so we can return a reference to the dispatch function from the Redux store.\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import the order details which includes our order information.\r\nimport OrderDetails from \"../../components/OrderInformation\";\r\n\r\n//mapsate includes a list of our order details -stored\r\nconst mapState = ({ ordersData }) => ({\r\n  orderDetails: ordersData.orderDetails,\r\n});\r\n\r\n//constant\r\nconst ExtendedOrderHistory = () => {\r\n  //react hooks\r\n  // here we intilize them- before we can use them\r\n\r\n  //the key is the orderID specific to each order\r\n  const { orderID } = useParams();\r\n  const dispatch = useDispatch();\r\n  //order details- details/price\r\n  const { orderDetails } = useSelector(mapState);\r\n  const { orderTotal } = orderDetails;\r\n\r\n  //after oage has rendred we send signl to browser to fetch the order ID.\r\n  useEffect(() => {\r\n    dispatch(getOrderDetailsStart(orderID));\r\n  }, []);\r\n\r\n  //returned on page\r\n  return (\r\n    <div>\r\n      {/*page title - includes unique order ID */}\r\n      <h1>Order ID: #{orderID}</h1>\r\n      {/*order details displayed on page */}\r\n      <OrderDetails order={orderDetails} />\r\n      {/*total price of order dislayed on page. */}\r\n      <h3>Total: {orderTotal}</h3>\r\n    </div>\r\n  );\r\n};\r\n//export it so we can onherit this page on app.js - so we could add authentication to this page - only autharised user can view their accounts.\r\nexport default ExtendedOrderHistory;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\ProductInfo\\index.js",["624","625"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Menus\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\forms\\Selections\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\AdminBar\\index.js",[],["626","627"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Panel\\index.js",["628"],"//this file contains code for the order history page - this page- just contains an overview of the order.\r\n\r\n//IMPORTS\r\n\r\n//import react\r\nimport React, { useEffect } from \"react\";\r\n//import usedispatch/useselector - our react hooks.\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import our action from redux - fethes the order history\r\nimport { getUserOrderHistory } from \"./../../redux/Orders/orders.actions\";\r\n//import our orderhistory component - contains the code for the page\r\nimport PreviousOrders from \"../../components/PreviousOrders\";\r\n\r\n//mapsate\r\nconst mapState = ({ user, ordersData }) => ({\r\n  //user data linked to that order\r\n  currentUser: user.currentUser,\r\n  //out order history\r\n  orderHistory: ordersData.orderHistory.data,\r\n});\r\n//constant\r\nconst Panel = (props) => {\r\n  //usedispatch\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentUser, orderHistory } = useSelector(mapState);\r\n  //after browser renders fetch our order history inked the current logged in user.\r\n  useEffect(() => {\r\n    dispatch(getUserOrderHistory(currentUser.id));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/*title */}\r\n      <h1>Order History</h1>\r\n      {/*our order hisotry componenet */}\r\n      <PreviousOrders orders={orderHistory} />\r\n    </div>\r\n  );\r\n};\r\n//export so we can use it elsewhere.\r\nexport default Panel;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\NavB\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ProductsResults\\index.js",["629","630","631","632","633"],"//This file contains the code for fthe brosw product page. where user can browse the range of products available.\r\n\r\n//IMPORTS\r\n\r\n//Import react/ and useEffect\r\nimport React, { useEffect } from \"react\";\r\n//import our user action that fethces all the products.\r\nimport { fetchProductsStart } from \"../../redux/Products/products.actions\";\r\n//import the stylesheet that styles this browse page.\r\nimport \"./productList.scss\";\r\n//import from redux library\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EachProduct from \"./EachProduct\";\r\n//inherit the dropdown menu.\r\nimport DropDown from \"../forms/Selections\";\r\n//import useHistory t give us access to history instance and push to other pages.\r\n//useParams returns the object of key/value pairs of URL parameters.\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//showmore - gives us infinites ammount of products- loads a set of products each time it is clicked.\r\nimport ShowMore from \"./../ShowMore\";\r\n\r\n//mapstate\r\nconst mapState = ({ productsData }) => ({\r\n  products: productsData.products,\r\n});\r\n\r\n//constant\r\nconst BrowseProducts = ({}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { products } = useSelector(mapState);\r\n  //filter type - Tv/laptop/accessories/phones\r\n  const { filterType } = useParams();\r\n  //constant\r\n  const { data, queryDoc, isLastPage } = products;\r\n\r\n  //action after page is rendered- filter is applied etc only Tv is shown. fetches products that are only categroised as the filter type.\r\n  useEffect(() => {\r\n    dispatch(fetchProductsStart({ filterType }));\r\n  }, [filterType]);\r\n\r\n  //this below handles when the user alters the product filter from drop down menu.\r\n  //user is pushed to page with only the products that apply with filter.\r\n  const handleProductFilter = (e) => {\r\n    const anotherFilter = e.target.value;\r\n    history.push(`/search/${anotherFilter}`);\r\n  };\r\n  //Below handles the case that there are no products in store or availabe.\r\n  if (!Array.isArray(data)) return null;\r\n  if (data.length < 1) {\r\n    return (\r\n      <div className=\"products\">\r\n        {/*below the messeage is only displayed when there are no products */}\r\n        <p>\r\n          We appologies, no products of this category available at this momment\r\n          of time\r\n        </p>\r\n        <p>Please Visit Another Time.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //here below we create the filters\r\n  //also create the relevent options\r\n  // handlechange  is used to set a new state for the input.\r\n  const createFilters = {\r\n    defaultValue: filterType,\r\n    options: [\r\n      {\r\n        name: \"Show all\",\r\n        value: \"\",\r\n      },\r\n      {\r\n        name: \"Tv's\",\r\n        value: \"tv's\",\r\n      },\r\n      {\r\n        name: \"Phones\",\r\n        value: \"phones\",\r\n      },\r\n      {\r\n        name: \"Laptops\",\r\n        value: \"laptops\",\r\n      },\r\n      {\r\n        name: \"Accessories\",\r\n        value: \"accessories\",\r\n      },\r\n    ],\r\n\r\n    handleChange: handleProductFilter,\r\n  };\r\n\r\n  //this is the fuction that fetches more products every time you click show more.\r\n  const handleShowMoreEvent = () => {\r\n    dispatch(\r\n      fetchProductsStart({\r\n        filterType,\r\n        startAfterDoc: queryDoc,\r\n        persistProducts: data,\r\n      })\r\n    );\r\n  };\r\n  //when user clicks showmore then it calls the function that handles what happens when you click showmore.\r\n  const CreateShowMoreE = {\r\n    onLoadMoreEvt: handleShowMoreEvent,\r\n  };\r\n\r\n  //returned on the browse page.\r\n  return (\r\n    <div className=\"products\">\r\n      {/*page title */}\r\n      <h1>Browse Products</h1>\r\n      {/*the drop down menu where user can select/ apply filters */}\r\n      <DropDown {...createFilters} />\r\n\r\n      {/*maps all the products- 3 categories that make up each product */}\r\n      <div className=\"products__list\">\r\n        {data.map((product, pos) => {\r\n          const { productThumbnail, productName, productPrice } = product;\r\n          {\r\n            /*if there is no product then it is undefined. */\r\n          }\r\n          if (\r\n            !productThumbnail ||\r\n            !productName ||\r\n            typeof productPrice === \"undefined\"\r\n          )\r\n            return null;\r\n          {\r\n            /*here we configure/create he product with 3 categories. */\r\n          }\r\n          const createProduct = {\r\n            ...product,\r\n          };\r\n          {\r\n            /*Create each product and display it on the webpage individually- each unique product has unique documentID/ID */\r\n          }\r\n          return <EachProduct key={pos} {...createProduct} />;\r\n        })}\r\n      </div>\r\n      {/*if its not the last page then infitnite scroll will continue, it will call the createShowmoreE fucntion everytime user clicks button */}\r\n      {!isLastPage && <ShowMore {...CreateShowMoreE} />}\r\n    </div>\r\n  );\r\n};\r\n//export  so we can in herit onthe browse web page.\r\nexport default BrowseProducts;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\ForgotPass\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\FormCont\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\CreateAcc\\index.js",["634"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\OrderInformation\\index.js",["635","636","637","638","639"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\setUps\\MainPageSetUp.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Profile\\index.js",["640"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\setUps\\HomePageSetUp.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\forms\\Input\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\stripePayment\\publicKeyStripe.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\customHooks\\adminAuthentication.js",["641"],"//this file configurates whether an user is an Admin or not. It gives Admin authentication\r\n\r\n//IMPORTS\r\n\r\n//useEffect is a react Hook, it lets the componnet know it needs to do something after page is rendered.\r\nimport { useEffect } from \"react\";\r\n//import useHisotry enables us to go to diffrent pages after something happens. etc if you click add to basket: you got to the basket page with item.\r\nimport { useHistory } from \"react-router-dom\";\r\n//import useselector from redux.\r\nimport { useSelector } from \"react-redux\";\r\n//determines whether user is admin or not\r\nimport { IsUserAdmin } from \"../Service\";\r\n\r\n// import { checkUserSession } from \"../redux/User/user.actions\";\r\n\r\n//defines current user - enabkes us to map userstate\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n});\r\n\r\n//constant\r\n//Authenticates Admin\r\nconst AdminAuthentication = (props) => {\r\n  //useselector-allows extraction of data from mapstate - userStore\r\n\r\n  const { currentUser } = useSelector(mapState);\r\n  //define constant history before you can use it.\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    //if admin is not user- prompts login - pushes you back to sign in page\r\n    if (!IsUserAdmin(currentUser)) {\r\n      history.push(\"/signin\");\r\n    }\r\n  }, [currentUser]);\r\n//return the current user logged in.\r\n  return currentUser;\r\n};\r\n//export this file so it can be used by other files s\r\nexport default AdminAuthentication;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\customHooks\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\customHooks\\userAuthentication.js",["642"],"//this file contains code for the normal user authentication.\r\n\r\n//IMPORTS\r\n\r\n//import useEffect from react\r\nimport { useEffect } from \"react\";\r\n//import useSelector to extract data from user states (mapstate).\r\nimport { useSelector } from \"react-redux\";\r\n//import useHistory to go to diffent pages after action occurs\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//constant\r\nconst mapState = ({ user }) => ({\r\n  //currrent is the current user logged in.\r\n  currentUser: user.currentUser,\r\n});\r\n\r\nconst useAuthentication = (props) => {\r\n  //define/construct usehistory before you can use it.\r\n  const history = useHistory();\r\n\r\n  const { currentUser } = useSelector(mapState);\r\n  //used to tell browser components action after its rendered\r\n  //if user is not logged in the your in sign in oage.\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      history.push(\"/signin\");\r\n    }\r\n  }, [currentUser]);\r\n  //returns the user\r\n  return currentUser;\r\n};\r\n//exports so ti can be used in other files.\r\nexport default useAuthentication;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\Checkout\\index.js",["643"],"//this file contains code for basket page. It include the layout of the page and the table layout.\r\n\r\n//IMPORTS\r\n\r\n//import react\r\nimport React from \"react\";\r\n//import our basket selectors\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/Cart/cart.selectors\";\r\n//import useslector from our redux library\r\nimport { useSelector } from \"react-redux\";\r\n//import from reselect/\r\nimport { createStructuredSelector } from \"reselect\";\r\n//inherit buttons from button file\r\nimport Buttons from \"./../forms/Button\";\r\n//import specific file for each specific item proeprities.\r\nimport EachProduct from \"./Item\";\r\n//import usehistory\r\nimport { useHistory } from \"react-router-dom\";\r\n//import the styling page for thi website\r\nimport \"./basketPage.scss\";\r\n\r\n// the createStructuredSelector would take an object whose properties are input-selectors and returns a structured selector.\r\n//take in ou slectors - would store/used to return products.\r\nconst mapState = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n});\r\n\r\n//constant\r\nconst BasketComponent = ({}) => {\r\n  //error messeging when the basket is empty.\r\n  const EmptyBasket = \"Your Basket is empty\";\r\n  //usehistory\r\n  const history = useHistory();\r\n  const { cartItems, total } = useSelector(mapState);\r\n\r\n  //return table/basket\r\n  return (\r\n    <div className=\"Basket\">\r\n      {/*basket page title */}\r\n      {/* <h1>Basket</h1> */}\r\n\r\n      <div className=\"basket__checkout\">\r\n        {/*return table if the are items added to the basket */}\r\n        {/*and styling for table */}\r\n        {cartItems.length > 0 ? (\r\n          <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n            <tbody>\r\n              {/*style table row*/}\r\n              <tr>\r\n                <table\r\n                  className=\"basket_header\"\r\n                  border=\"0\"\r\n                  cellPadding=\"10\"\r\n                  cellSpacing=\"0\"\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      {/*below are the headers about the product shown before purchasing. */}\r\n                      <th>Item</th>\r\n                      <th>Description</th>\r\n                      <th> Amount</th>\r\n                      <th>Price</th>\r\n                      <th>Remove </th>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </tr>\r\n              <tr>\r\n                {/*table styling */}\r\n                <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                  <tbody>\r\n                    {cartItems.map((item, pos) => {\r\n                      return (\r\n                        <tr key={pos}>\r\n                          <td>\r\n                            {/*return item back on to the page- this is inherited from another file, includes product thumbnail/name/price/quantity etc */}\r\n                            <EachProduct {...item} />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </tr>\r\n\r\n              <tr>\r\n                {/*table styling.  */}\r\n                <table\r\n                  algin=\"right \"\r\n                  border=\"0\"\r\n                  cellSpacing=\"0\"\r\n                  cellPadding=\"10\"\r\n                >\r\n                  <tr algin=\"right\">\r\n                    <td>\r\n                      {/*below displays the total price - total was created in another file and inherited here.  */}\r\n                      <h3>Total: £{total}</h3>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    {/*table styling */}\r\n                    <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            {/*this below are the buttons at the bottom of the basket page. */}\r\n                            {/*we imported history so we could have the functionality below, it would take you back to the page user came from */}\r\n                            <Buttons onClick={() => history.goBack()}>\r\n                              Continue shopping\r\n                            </Buttons>\r\n                          </td>\r\n                          <td>\r\n                            {/*this button would push user to basket page to check out with product. */}\r\n                            <Buttons onClick={() => history.push(\"/payment\")}>\r\n                              Checkout\r\n                            </Buttons>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </tr>\r\n                </table>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>{EmptyBasket}</p>\r\n        )}\r\n        {/*above displays the message when the user tries to go the basket, but there are no items there  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//export the basket componernt so we can inherit it ont eh webpage component.\r\nexport default BasketComponent;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\LogIn\\index.js",["644"],"//this file contains code for the login page where the user can log in with his email and password.\r\n\r\n//IMPORTS\r\n\r\n//inherit button form buttons component\r\nimport Buttons from \"./../forms/Button\";\r\n//inherit form input fields from Input\r\nimport Input from \"./../forms/Input\";\r\n//import react and react hooks\r\nimport React, { useState, useEffect } from \"react\";\r\n//import the styling for this page\r\nimport \"./logIn.scss\";\r\n//import links to enable naviagtion to other pages and import useHisotry t give us access to history instance and push tp other pages.\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n//import from redux library\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//impor the form conatiner\r\nimport FormCont from \"./../FormCont\";\r\n\r\n//import our user actions - login functionalities\r\nimport {\r\n  attemptEmailLogin,\r\n  attemptGoogleLogin,\r\n} from \"./../../redux/User/user.actions\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n});\r\n\r\nconst LogIn = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //constants\r\n  //our useState passes the initial state to this function and it returns a variable with the current state value. etc user entred email. likewise for pass1.\r\n  const [email, setEmail] = useState(\"\");\r\n  const { currentUser } = useSelector(mapState);\r\n  const [pass1, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //after browser renders the form is reset and user is pushed back to the home page.\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      resetForm();\r\n\r\n      history.push(\"/\");\r\n    }\r\n  }, [currentUser]);\r\n  //email/password reste to blank fields\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  //handles the form submission when user clicks sign in\r\n  const handleFormSubmission = (e) => {\r\n    // on submission event prevent the browser to reload/refresh\r\n    e.preventDefault();\r\n    //this below dispatches actions and triggers state changes to the store - user action triggred\r\n    dispatch(attemptEmailLogin({ email, pass1 }));\r\n  };\r\n\r\n  //this below dispatches the action and  triggers our google login from the redux store.\r\n  const handleGoogleLogin = () => {\r\n    dispatch(attemptGoogleLogin());\r\n  };\r\n\r\n  //form container - headline(header)- is Sign in  this case. the form container is inherrited from formcont component.\r\n  const configureFormCont = {\r\n    headline: \"Sign In\",\r\n  };\r\n\r\n  return (\r\n    //wrap everyhting with form container\r\n    <FormCont {...configureFormCont}>\r\n      <div className=\"formCont\">\r\n        {/*When submitted it calls the handleFormSubmission function */}\r\n        {/*All the input fields are set here with their types/names and place holders. */}\r\n        {/*handleChange is used to set a new state for the inputs.*/}\r\n        <form onSubmit={handleFormSubmission}>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            handleChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            name=\"pass1\"\r\n            value={pass1}\r\n            placeholder=\"Password\"\r\n            handleChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/*submission- user clicks sign up- triggers/calls handleFromSubmission. */}\r\n          <Buttons type=\"submit\"> Sign in</Buttons>\r\n\r\n          {/*Below is our google login functionalities */}\r\n          <div className=\"s__logIn\">\r\n            <div className=\"row\">\r\n              {/*the onlick event is that it shoudl pop up the google login form that google provides */}\r\n              <Buttons onClick={handleGoogleLogin}>Sign in with Google</Buttons>\r\n            </div>\r\n          </div>\r\n\r\n          {/*We also have an option at the bottom to reset password or for an user to register if he/she doesnt have an account. */}\r\n\r\n          <div className=\"password__reset_register\">\r\n            <Link to=\"/forgotPassword\">Reset Password</Link>\r\n          </div>\r\n          <div className=\"password__reset_register\">\r\n            New to AZoQ? <Link to=\"/register\">Register</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {/*close the form container with all elements*/}\r\n    </FormCont>\r\n  );\r\n};\r\n//export it so we can inherit it on the webpage file.\r\nexport default LogIn;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\hComponent\\UserAuthNeeded.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\firebase\\utilation.js",["645"],"//This file contains code for our firebase login/ register user. It also includes the fuctionality for the google login\r\n\r\n//IMPORTS\r\n\r\n//import firebaseconfiguration from our configure file\r\nimport { firebaseConfiguration } from \"./configure\";\r\n//import firebase so we could use it.\r\nimport firebase from \"firebase/app\";\r\n//import the firestore. - where user/products/orders data will be stored.\r\nimport \"firebase/firestore\";\r\n// import firebase authentication - handles authentication for us.\r\nimport \"firebase/auth\";\r\nimport userTypes from \"../redux/User/user.types\";\r\n\r\n//this creates and initialises the firebase app instance.\r\nfirebase.initializeApp(firebaseConfiguration);\r\n\r\n//export the firstore and wauthentication. so it can be used throughout this project.\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n//this is out google provider - enables google login.\r\n//firebase handles the google login, we just import it.\r\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\n//select which google account you want to log in with.\r\nGoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\n// handles user profile.\r\nexport const handleUserProfile = async ({ userAuth, additionalData }) => {\r\n  if (!userAuth) return;\r\n  //user user iD\r\n  const { uid } = userAuth;\r\n  // every user has its unique ID so we can refrence them.\r\n  const userRef = firestore.doc(`users/${uid}`);\r\n  const snapshot = await userRef.get();\r\n  //timestamp when user is created- user is automatically defined as regular user.\r\n  if (!snapshot.exists) {\r\n    //every user has email and display name.\r\n    const { displayName, email } = userAuth;\r\n    const userRoles = [\"user\"];\r\n    const timestamp = new Date();\r\n\r\n    //creating  user - when you register.\r\n    // the display name, email created date stored in firestore.\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdDate: timestamp,\r\n        userRoles,\r\n        ...additionalData,\r\n      });\r\n    } catch (err) {\r\n      // console.log(err);\r\n    }\r\n  }\r\n  //retrun userRef\r\n  return userRef;\r\n};\r\n//login and log out  - receives data from user.\r\nexport const getCurrentUser = () => {\r\n  //creates new promise.\r\n  //The Promise object means the eventual success or failure of an asynchronous operation and its resulting value.\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      unsubscribe();\r\n      //user is authenticated logged in\r\n      resolve(userAuth);\r\n    }, reject);\r\n  });\r\n};\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\firebase\\configure.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.actions.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\rootSaga.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\index.js",["646"],"//This file contains the code that displays and holds our application. This file is the entire web applications component tree.\n\n//IMPORTS\n\n//import react\nimport React from \"react\";\n//import browser router\nimport { BrowserRouter } from \"react-router-dom\";\n//import our web application.\nimport App from \"./App\";\n//import provider\nimport { Provider } from \"react-redux\";\n//import ReacDom.\nimport ReactDOM from \"react-dom\";\n//import the redux store and perisitor.\nimport { store, persistor } from \"./redux/createStore\";\n//import persistGate from redux\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\n\n//ReactDOM is the package that enables DOM specific methods. this can be used at the top level of a web application to allow an efficient way of managing DOM elements of the web page.\n\n//We can apply the render function to it. the render function allows a single React Component or few Components wrapped together in a Component.This function uses the efficient methods of React for updating the DOM.\n\nReactDOM.render(\n  //we will use StrictMode as tool for highlighting potential error in the web application.- does not display error in user interface just automated checks- best practise.\n  <React.StrictMode>\n    {/*The provider makes the Redux store available to any nested components */}\n    <Provider store={store}>\n      {/**we will use BrowserRouter for client side routing with URL- wrap this around our application */}\n      <BrowserRouter>\n        {/*PersistGate delays the rendering of the Web applications user interface until the persisted state has been retrieved and saved to redux*/}\n        <PersistGate persistor={persistor}>\n          {/*My web application. */}\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  //root\n  document.getElementById(\"root\")\n);\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\hComponent\\AdminAuthNeeded.js",[],["647","648"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Contact\\index.js",["649"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Home\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\HomeComponent\\index.js",["650","651","652","653"],"//this file contains code for the home page: images an links to other pages. This is the main page for the website.\r\n\r\n//IMPORTS\r\n\r\n//import react to use react components.\r\nimport React from \"react\";\r\n//styling for the homepage important\r\nimport \"./homePage.scss\";\r\n//images for the different products\r\nimport Laptop from \"./../../images/laptop.jpg\";\r\nimport Tv from \"./../../images/tv.jpg\";\r\nimport Phone from \"./../../images/phone.jpg\";\r\nimport Accessories from \"./../../images/accesories.jpg\";\r\n//import link, so we could use links throughout this page to other pages.\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeComponent = (props) => {\r\n  return (\r\n    //The section wrapped around homeP and container for the 4 diffrent catagories\r\n\r\n    <div className=\"homeP\">\r\n      <div className=\"cont\">\r\n        {/* all products have same classname for styling purposes. the diffrent images displayed for each section */}\r\n        <div\r\n          className=\"product\"\r\n          style={{\r\n            backgroundImage: `url(${Laptop})`,\r\n          }}\r\n        >\r\n          {/* Link to the laptops page*/}\r\n          <Link to=\"/search/laptops\">\r\n            <a>Laptop's</a>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* all products have same classname for styling purposes. the diffrent images displayed for each section */}\r\n\r\n        <div\r\n          className=\"product\"\r\n          style={{\r\n            backgroundImage: `url(${Tv})`,\r\n          }}\r\n        >\r\n          {/* Link to the tv page*/}\r\n          <Link to=\"/search/tv's\">\r\n            <a>Tv's</a>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* all products have same classname for styling purposes. the diffrent images displayed for each section */}\r\n        <div\r\n          className=\"product\"\r\n          style={{\r\n            backgroundImage: `url(${Phone})`,\r\n          }}\r\n        >\r\n          {/* Link to the phones page*/}\r\n          <Link to=\"/search/phones\">\r\n            <a>Smart phones</a>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* all products have same classname for styling purposes. the diffrent images displayed for each section */}\r\n        <div\r\n          className=\"product\"\r\n          style={{\r\n            backgroundImage: `url(${Accessories})`,\r\n          }}\r\n        >\r\n          {/* Link to the accessories page*/}\r\n          <Link to=\"/search/accessories\">\r\n            <a>Accessories</a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//exported so it can be inherited by another page to display it on the site.\r\nexport default HomeComponent;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\SignIn\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\createStore.js",["654"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSagaMiddle from \"redux-saga\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddle();\r\nexport const middlewares = [thunk, sagaMiddleware, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {\r\n  store,\r\n  persistor,\r\n};\r\n",["655","656"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\setUps\\AdminPageSetUp.js",["657","658"],"//this file contains code for the admin page layout, this is used on the admin page where the admin can create new products etc.\r\n\r\n//this page allows custom setups for the admin page, this can be changed and made look diffrent compared all the user user pages.\r\n\r\n//IMPORTS\r\n\r\n//import react to enable the use of react elements.\r\nimport React from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\n//import useDispatch- use to dispacth actions- fetches and sends information to/from redux store.\r\nimport { useDispatch } from \"react-redux\";\r\n//import the signout functionalityy for admin to enable admin to log out.\r\nimport { attemptLogout } from \"../redux/User/user.actions\";\r\n//this includes the user profile.\r\nimport AdminMenu from \"../components/Menus\";\r\n//footer- used on all the setups\r\nimport Footer from \"../components/Footer\";\r\n//import the navbar- used on all pages.\r\nimport NavB from \"../components/NavB\";\r\n\r\n//constant\r\nconst AdminPageSetUp = (props) => {\r\n  //useDispatch used to distach actions\r\n  const dispatch = useDispatch();\r\n  //the signout fuctionality is dispatched-\r\n  //admin activates signout- which loggs him out of the site.\r\n\r\n  // const signOut = () => {\r\n  //   dispatch(attemptLogout());\r\n  // };\r\n\r\n  //return - admin set up\r\n  return (\r\n    <div className=\"admin__setUp\">\r\n      {/*the navnar and its properties on the admin navabar. */}\r\n      <NavB {...props} />\r\n\r\n      <div className=\"profile\">\r\n        <AdminMenu />\r\n      </div>\r\n      {/*this contains the content, which is the products that are on the webapplication- the prodcts admin can delete/create. */}\r\n      <div className=\"content\">{props.children}</div>\r\n      {/*the footer which was imported/ displayed on allt eh pages. */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n//exported so it can be inherited by admin page.\r\nexport default AdminPageSetUp;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ResetPass\\index.js",["659"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\webPages\\Browse\\index.js",["660"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\ProductsResults\\EachProduct\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\PopUp\\index.js",["661"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\PreviousOrders\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\rootReducer.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\PaymentForm\\index.js",["662","663"],"//This file contains code that handles payment, it dispplays the payment form and handles inputs. I have included shipping details aswell as billing as these might not always be the same.\r\n\r\n//this page also call several fucntions from stripe to handle the payment.\r\n\r\n//IMPORTS\r\n\r\n//import react and react hooks.\r\nimport React, { useState, useEffect } from \"react\";\r\n//import the stripe elements needed in order to complete payment.\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n//inherit the form input fields from input file- code reuseability.\r\nimport Input from \"../forms/Input\";\r\n//inherit the buttons from button file.\r\nimport Buttons from \"../forms/Button\";\r\n//import countrydrop down-list of countries\r\nimport { CountryDropdown } from \"react-country-region-selector\";\r\n//import api instacnce-n includes out baseurl.\r\nimport { apiInstance } from \"../../Service\";\r\n//these below are our selectors\r\nimport {\r\n  selectCartTotal,\r\n  selectCartItemsCount,\r\n  selectCartItems,\r\n} from \"../../redux/Cart/cart.selectors\";\r\n//this below stores our order so we can fetch it to display on prevoius orders page.\r\nimport { saveOrderHistory } from \"../../redux/Orders/orders.actions\";\r\nimport { clearCart } from \"../../redux/Cart/cart.actions\";\r\n//import from reselect\r\nimport { createStructuredSelector } from \"reselect\";\r\n//import redux hooks\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//import usehistory - gives us access to history instance- alos enables us to push to diffrent pages.\r\nimport { useHistory } from \"react-router-dom\";\r\n//import the styling for this page.\r\nimport \"./payment.scss\";\r\n\r\n//below shows the the starting states of the address. but in this case this should be left blank for user input.\r\n\r\nconst StartingStates = {\r\n  line1: \"\",\r\n  line2: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  postal_code: \"\",\r\n  country: \"\",\r\n};\r\n// the createStructuredSelector would take an object whose properties are input-selectors and returns a structured selector.\r\n//take in ou selectors - would store/used to return products.\r\nconst mapState = createStructuredSelector({\r\n  total: selectCartTotal,\r\n  itemCount: selectCartItemsCount,\r\n  cartItems: selectCartItems,\r\n});\r\n\r\n//constant\r\nconst PaymentFormComp = () => {\r\n  //usehistory assigned to hsitory variable.\r\n  const history = useHistory();\r\n  //stripe\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  //the total price and products/items stored.\r\n  const { total, itemCount, cartItems } = useSelector(mapState);\r\n  //used to dispcth actions\r\n  const dispatch = useDispatch();\r\n\r\n  //our billing address\r\n  const [billingAddress, setBillingAddress] = useState({\r\n    // when page renders change it to the starting state.\r\n    ...StartingStates,\r\n  });\r\n  //our shipping address\r\n  const [shippingAddress, setShippingAddress] =\r\n    // when page renders change it to the starting state.\r\n    useState({\r\n      ...StartingStates,\r\n    });\r\n\r\n  //constant of the recpeients name- state- set to blank\r\n\r\n  const [recipientName, setRecipientName] = useState(\"\");\r\n  //constant of the name on card- state- set to blank\r\n  const [nameOnCard, setNameOnCard] = useState(\"\");\r\n\r\n  //afer page renders- if the item count is less than 1, user is pushed back to your account page.\r\n  useEffect(() => {\r\n    if (itemCount < 1) {\r\n      history.push(\"/panel\");\r\n    }\r\n  }, [itemCount]);\r\n\r\n  // this below handles the shipping.\r\n  const handleShippingDetails = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setShippingAddress({\r\n      //all shipping address elements reduced and set to shipping address.\r\n      ...shippingAddress,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //this below handles the billing\r\n  const handleBillingDetails = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setBillingAddress({\r\n      //this sets the billing address. billing address includes the full billing address and stored as 'billingAddress'\r\n      ...billingAddress,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // this handles the event when the user submits the payment form.\r\n\r\n  const handleFormSubmit = async (evt) => {\r\n    //the browser is preveneted from reloading/refreshing\r\n    evt.preventDefault();\r\n    //define/fetch card element\r\n    const cardElement = elements.getElement(\"card\");\r\n    //this if statement in other words will not allow user to submit payment if the following fields afre not filled out. only address line line2 is optional.\r\n    if (\r\n      //required fields for submission\r\n      //shipping addreeses that are required\r\n      !shippingAddress.line1 ||\r\n      !shippingAddress.city ||\r\n      !shippingAddress.state ||\r\n      !shippingAddress.postal_code ||\r\n      !shippingAddress.country ||\r\n      //billing addresses that are required.\r\n      !billingAddress.line1 ||\r\n      !billingAddress.city ||\r\n      !billingAddress.state ||\r\n      !billingAddress.postal_code ||\r\n      !billingAddress.country ||\r\n      !recipientName ||\r\n      !nameOnCard\r\n    ) {\r\n      return;\r\n    }\r\n    //api instance - imported from from service file.\r\n    apiInstance\r\n      //post\r\n      //POST is used to send data to the API server to create payment.\r\n      .post(\"/payments/create\", {\r\n        //the total needs to be multiplied by 100.\r\n        amount: total * 100,\r\n        //address\r\n        shipping: {\r\n          //recpient name  is the stored as name\r\n          name: recipientName,\r\n\r\n          // the address includes mainly shipping address- where customer lives.\r\n          address: {\r\n            ...shippingAddress,\r\n          },\r\n        },\r\n      })\r\n      //client secret\r\n      .then(({ data: clientSecret }) => {\r\n        stripe\r\n          //this creates payment method.\r\n          .createPaymentMethod({\r\n            type: \"card\",\r\n            card: cardElement,\r\n            //the payment method takes billing details rather than shipping as billing is about details on the card.\r\n\r\n            billing_details: {\r\n              //takes in the name on the card as name.\r\n              name: nameOnCard,\r\n              //takes in customers billing address.\r\n              address: {\r\n                ...billingAddress,\r\n              },\r\n            },\r\n          })\r\n          .then(({ paymentMethod }) => {\r\n            //stripe functions\r\n            //comfirms payment\r\n            stripe\r\n              .confirmCardPayment(clientSecret, {\r\n                payment_method: paymentMethod.id,\r\n              })\r\n              //paymentintent encapsulates details about the transaction,\r\n              .then(({ paymentIntent }) => {\r\n                //this below creates the order- so it can be saved as part of order history\r\n                const createOrder = {\r\n                  //total price of order\r\n                  orderTotal: total,\r\n                  //total items ordered by customer\r\n\r\n                  //the order items are mapped- each item.\r\n                  orderItems: cartItems.map((item) => {\r\n                    //we create an constant to store all the item details-price,documentID, productname etc, to item.\r\n                    const {\r\n                      //product details\r\n                      documentID,\r\n                      productThumbnail,\r\n                      productName,\r\n                      productPrice,\r\n                      quantity,\r\n                      //store it to item.\r\n                    } = item;\r\n\r\n                    //return item/product details\r\n                    return {\r\n                      //we need these to save it as prevoius orders.\r\n                      documentID,\r\n                      productThumbnail,\r\n                      productName,\r\n                      productPrice,\r\n                      quantity,\r\n                    };\r\n                  }),\r\n                };\r\n                //dispath an action that triggers and calls a function that saves the order- creates order.\r\n                dispatch(saveOrderHistory(createOrder));\r\n              });\r\n          });\r\n      });\r\n  };\r\n  //here we style the card element- which is the card number/cvc fields.\r\n  const createCardElement = {\r\n    iconStyle: \"solid\",\r\n    style: {\r\n      base: {\r\n        //font size\r\n        fontSize: \"16px\",\r\n      },\r\n    },\r\n    //hides postal code- we dont really need this as part of payment process.\r\n    hidePostalCode: true,\r\n  };\r\n\r\n  //return form\r\n  return (\r\n    <div className=\"payment__details\">\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"class\">\r\n          {/*subheading for page */}\r\n          <h2>Shipping Address</h2>\r\n          {/*these below are the input fields for the shipping address */}\r\n\r\n          {/*this below is the name field- it is required in order to process payment */}\r\n\r\n          <Input\r\n            required\r\n            placeholder=\"Recipient Name\"\r\n            name=\"recipientName\"\r\n            handleChange={(evt) => setRecipientName(evt.target.value)}\r\n            value={recipientName}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field line1 address- reuqired */}\r\n          <Input\r\n            required\r\n            placeholder=\"Line 1\"\r\n            name=\"line1\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.line1}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field line 2 address optional */}\r\n          <Input\r\n            placeholder=\"Line 2\"\r\n            name=\"line2\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.line2}\r\n            type=\"text\"\r\n          />\r\n\r\n          <Input\r\n            required\r\n            placeholder=\"City\"\r\n            name=\"city\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.city}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field county*/}\r\n          <Input\r\n            required\r\n            placeholder=\"County\"\r\n            name=\"state\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.state}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field poste code */}\r\n          <Input\r\n            required\r\n            placeholder=\"Postal Code\"\r\n            name=\"postal_code\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.postal_code}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field drop down country - what country user resides in.  */}\r\n          <div className=\"formRow checkoutInput\">\r\n            <CountryDropdown\r\n              required\r\n              //when user inputs something into that form fields- handle shippingDetails function is called.\r\n              onChange={(val) =>\r\n                handleShippingDetails({\r\n                  target: {\r\n                    name: \"country\",\r\n                    value: val,\r\n                  },\r\n                })\r\n              }\r\n              value={shippingAddress.country}\r\n              valueType=\"short\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"class\">\r\n          <h2>Billing Address</h2>\r\n          {/*these below are the input fields for the billing address */}\r\n          <Input\r\n            required\r\n            placeholder=\"Name on Card\"\r\n            name=\"nameOnCard\"\r\n            //we call setonnamecard- when name is entred\r\n            handleChange={(evt) => setNameOnCard(evt.target.value)}\r\n            value={nameOnCard}\r\n            type=\"text\"\r\n          />\r\n          {/*cusotmers address line 1 required*/}\r\n          <Input\r\n            required\r\n            placeholder=\"Line 1\"\r\n            name=\"line1\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.line1}\r\n            type=\"text\"\r\n          />\r\n          {/*line 2 address not compulsory */}\r\n          <Input\r\n            placeholder=\"Line 2\"\r\n            name=\"line2\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.line2}\r\n            type=\"text\"\r\n          />\r\n          {/*City field - etc Birmingham */}\r\n          <Input\r\n            required\r\n            placeholder=\"City\"\r\n            name=\"city\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.city}\r\n            type=\"text\"\r\n          />\r\n          {/*input field for county or borough */}\r\n          <Input\r\n            required\r\n            placeholder=\"County\"\r\n            name=\"state\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.state}\r\n            type=\"text\"\r\n          />\r\n          {/*postal code- required*/}\r\n          <Input\r\n            required\r\n            placeholder=\"Postal Code\"\r\n            name=\"postal_code\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.postal_code}\r\n            type=\"text\"\r\n          />\r\n          {/*this below is the country drop down- displays all the countries- user can select */}\r\n          <div className=\"formRow checkoutInput\">\r\n            <CountryDropdown\r\n              required\r\n              //when user inputs something into that form fields- handle billing Details function is called.\r\n              onChange={(val) =>\r\n                handleBillingDetails({\r\n                  target: {\r\n                    name: \"country\",\r\n                    value: val,\r\n                  },\r\n                })\r\n              }\r\n              value={billingAddress.country}\r\n              valueType=\"short\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {/*this below is the card details area, */}\r\n        <div className=\"card__details\">\r\n          {/*subheader*/}\r\n          <h2>Card Details</h2>\r\n\r\n          <CardElement options={createCardElement} />\r\n        </div>\r\n        {/*the payment submission button */}\r\n        <Buttons type=\"submit\">Pay Now</Buttons>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n//export this file so we can inherit it on the checkoutpage.\r\nexport default PaymentFormComp;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\components\\forms\\Button\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\Service\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\Orders\\orders.sagas.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\Cart\\cart.utils.js",["664"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.types.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react-fyp\\src\\redux\\User\\user.reducer.js",[],"C:\\Backups\\react\\src\\index.js",["665"],"C:\\Backups\\react\\src\\setUps\\AdminPageSetUp.js",["666","667"],"C:\\Backups\\react\\src\\redux\\rootReducer.js",[],"C:\\Backups\\react\\src\\webPages\\Contact\\index.js",["668"],"C:\\Backups\\react\\src\\webPages\\ForgotPass\\index.js",[],"C:\\Backups\\react\\src\\redux\\User\\user.sagas.js",[],"C:\\Backups\\react\\src\\components\\NavB\\index.js",[],"C:\\Backups\\react\\src\\redux\\Orders\\orders.types.js",[],"C:\\Backups\\react\\src\\components\\LogIn\\index.js",["669"],"C:\\Backups\\react\\src\\Service\\index.js",[],"C:\\Backups\\react\\src\\customHooks\\adminAuthentication.js",["670"],"C:\\Backups\\react\\src\\components\\Checkout\\Item\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\index.js",["671"],["672","673"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\setUps\\HomePageSetUp.js",[],["674","675"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.actions.js",[],["676","677"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\hComponent\\AdminAuthNeeded.js",[],["678","679"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Home\\index.js",[],["680","681"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\ForgotPass\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.reducer.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Footer\\index.js",[],["682","683"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.types.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\PopUp\\index.js",["684"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\Service\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\forms\\Button\\index.js",[],["685","686"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ProductsResults\\EachProduct\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\NavB\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ShowMore\\index.js",[],["687","688"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Administrator\\index.js",["689","690"],"//This file contains code for the admin page. this file contais the code allows a pop up form to be dipslayed so the admin can create a product, admin can also delete a product. The admins profile is also displayed here.\r\n\r\n//Import react and import our react hooks\r\nimport React, { useState, useEffect } from \"react\";\r\n//these below are our product actions\r\nimport {\r\n  addProductStart,\r\n  fetchProductsStart,\r\n  deleteProductStart,\r\n} from \"./../../redux/Products/products.actions\";\r\n//this is our styling page that styles this web page.\r\nimport \"./adminPage.scss\";\r\nimport azoqLogo from \"./../../images/clogo.png\";\r\n\r\n//this is the pop up form where the admin is asked details about the product to be created.\r\nimport PopUpForm from \"../../components/PopUp\";\r\n//this is the form inputs that is inherited from the input file.\r\n//used by administrator to create more information about a product\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nimport Input from \"./../../components/forms/Input\";\r\n//import our eact redux hooks\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//this below is the drop down menu we inherit from dropdown\r\nimport DropDown from \"../../components/forms/Selections\";\r\n//inherit buttons\r\nimport Buttons from \"./../../components/forms/Button\";\r\n//import our showmore function\r\nimport ShowMore from \"./../../components/ShowMore\";\r\n\r\n//mapstate\r\nconst mapState = ({ productsData }) => ({\r\n  products: productsData.products,\r\n});\r\n\r\n//constant\r\nconst Admin = (props) => {\r\n  const { products } = useSelector(mapState);\r\n  //we use use dispatch to to dispatch varoius actions when they are triggred.\r\n  const dispatch = useDispatch();\r\n\r\n  //conceal pop up hides the pop up form\r\n  const [concealPopUp, assignConcealPopUp] = useState(true);\r\n  //this sets the products type we have in the drop down men us\r\n  //the usestate intialises is to tv's as initial state\r\n  const [productCategory, assignProductType] = useState(\"tv's\");\r\n  //the intial state is blank string- admin created products name\r\n  const [productName, assignProductName] = useState(\"\");\r\n\r\n  //our stock update function.- by default empty string\r\n  const [stock, assignstock] = useState(\"\");\r\n  //our product information and the update function.- by default empty string\r\n  const [productInformation, assignProductInformation] = useState(\"\");\r\n  //here we have the productts image/update function\r\n  const [productThumbnail, assignProductImg] = useState(\"\");\r\n  const [productPrice, assignProductPrice] = useState(0);\r\n  //here we have our constant that we define as product\r\n  //lastpage is the final page- we cant show no more.\r\n  const { data, queryDoc, isLastPage } = products;\r\n\r\n  //after page renders- dispatch an action that fetches all the products the admin has created that are stored on the database.\r\n  useEffect(() => {\r\n    //when page rendred this actionn is triggred- products fetched\r\n    dispatch(fetchProductsStart());\r\n  }, []);\r\n  //pop up modal\r\n  const openPopUpModal = () => assignConcealPopUp(!concealPopUp);\r\n\r\n  //create our pop up modal\r\n  const createPopUpModal = {\r\n    //conceal the popup modal\r\n    concealPopUp,\r\n    //generate modal\r\n    openPopUpModal,\r\n  };\r\n\r\n  // reset the from to blank each time its opened\r\n  const initialFormState = () => {\r\n    //we have to have a starting point for our drop down menu- so we start with tv's\r\n    assignProductType(\"tv's\");\r\n    // initial empty field\r\n    assignProductName(\"\");\r\n    //no image to start off with,\r\n    assignProductImg(\"\");\r\n    //the price starts off with 0- admin can modify this when creating a product.\r\n    assignProductPrice(0);\r\n    //set to true in initial state\r\n    assignConcealPopUp(true);\r\n    //reset back to empty string\r\n    assignProductInformation(\"\");\r\n    //resert back to empty string\r\n    assignstock(\"\");\r\n  };\r\n\r\n  //this constant handles the event when the user submits this form\r\n  const handleFormSubmission = (e) => {\r\n    //on the event prevent the browser from refreshing\r\n    e.preventDefault();\r\n    //when  pop up form is submitted we dispatch this action\r\n    //we add the products to products  list\r\n    dispatch(\r\n      addProductStart({\r\n        //product category etc tv,laptops,accessories,phones\r\n        productCategory,\r\n        //the products name\r\n        productName,\r\n        //the products thumbnail/image\r\n        productThumbnail,\r\n        //stock info\r\n        stock,\r\n        //products price\r\n        productPrice,\r\n        //product infomation\r\n        productInformation,\r\n      })\r\n    );\r\n    //the initial form state function is called, which clears the form once it is submitted for a new entry, and takes it back to its initilal form.\r\n    initialFormState();\r\n  };\r\n\r\n  // this function below handles the show more event- we have infintie scroll capabilities- so when user clicks show more an action is dispatched.\r\n  const handleShowMoreEvent = () => {\r\n    //action is dispatched\r\n    dispatch(\r\n      //the next set of products are fetched\r\n      fetchProductsStart({\r\n        startAfterDoc: queryDoc,\r\n        //we persist the product\r\n        persistProducts: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  //here we create the show more\r\n  const createShowMore = {\r\n    //on the load more event - we call the function i created above- which handles the showmore event.\r\n    onLoadMoreEvt: handleShowMoreEvent,\r\n  };\r\n\r\n  //return\r\n  return (\r\n    //Admin page\r\n    <div className=\"Admin__page\">\r\n      <div className=\"PopUp__button\">\r\n        <ul>\r\n          <li>\r\n            {/*this button is the button where when the admin clicks it, it popus up with a modal form \r\n            \r\n            //the toggelmodal function pops up the modal when button is clicked\r\n            */}\r\n            <Buttons onClick={() => openPopUpModal()}>\r\n              Create a new product\r\n            </Buttons>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {/*This the pop up form we have imported from our pop up form- this is displayed here */}\r\n      <PopUpForm {...createPopUpModal}>\r\n        <div className=\"create_newProduct\">\r\n          {/*On the submission event */}\r\n          <form onSubmit={handleFormSubmission}>\r\n            {/*this below displays the company logo on the pop up form */}\r\n            <div className=\"azoq__Logo\">\r\n              <img src={azoqLogo} alt=\"AZoQ logo\" />\r\n            </div>\r\n            {/*this below is the forms title */}\r\n            {/* <h2>Create A NEW PRODUCT </h2> */}\r\n\r\n            {/*this is the first field in the create product form\r\n            \r\n            it is the drop down menu we have imported from the dropdown compnent\r\n            */}\r\n            <DropDown\r\n              //this is the category fieds = tv\r\n              label=\"Category\"\r\n              //this below defines the options we can have of products to create.\r\n              options={[\r\n                {\r\n                  //this is the tv option\r\n                  value: \"tv's\",\r\n                  name: \"TV's\",\r\n                },\r\n                {\r\n                  //this si the phones option\r\n                  value: \"phones\",\r\n                  name: \"Phones\",\r\n                },\r\n                {\r\n                  //this is the laptop option\r\n                  value: \"laptops\",\r\n                  name: \"Laptops\",\r\n                },\r\n                {\r\n                  //this is the accessories\r\n                  value: \"accessories\",\r\n                  name: \"Accessories\",\r\n                },\r\n              ]}\r\n              //on the event that a user selects an option, we call the set product category function- which matches it to the types we hav eavailable\r\n              handleChange={(e) => assignProductType(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              //this is the input for our product name.\r\n              label=\"Name\"\r\n              //text\r\n              type=\"text\"\r\n              //the value is the productName\r\n              value={productName}\r\n              //on the event admin enters name- call the assign product name function - which gives it value\r\n              handleChange={(e) => assignProductName(e.target.value)}\r\n            />\r\n            <Input\r\n              //this is the field for image- we need to enter image url in order to render an image on to the page\r\n              label=\"Image URL\"\r\n              //url\r\n              type=\"url\"\r\n              //product image\r\n              value={productThumbnail}\r\n              //on the event user enters url we assign the image to thhe product\r\n              handleChange={(e) => assignProductImg(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              //this is our stock field\r\n              label=\"Stock\"\r\n              //type text\r\n              type=\"text\"\r\n              //the value is the product price\r\n              value={stock}\r\n              //on the event stock price- we assign a tock value to that product.\r\n              handleChange={(e) => assignstock(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              //this is our price field\r\n              label=\"Price\"\r\n              //type number\r\n              type=\"number\"\r\n              //the min number is 0.00\r\n              min=\"0.00\"\r\n              //our max is defined below\r\n              max=\"100000.00\"\r\n              //with the side option the admin can go up price values by 0.01 at a time.\r\n              step=\"0.01\"\r\n              //the value is the product price\r\n              value={productPrice}\r\n              //on the event user submits price- we assign a price value to that product.\r\n              handleChange={(e) => assignProductPrice(e.target.value)}\r\n            />\r\n            {/* we use this on the form so the admin creating the .product can  write up product details */}\r\n            <CKEditor\r\n              //onchange - passs the event which allows us to call the updator function\r\n              //getData- passes back data to us.\r\n              onChange={(evt) => assignProductInformation(evt.editor.getData())}\r\n            />\r\n\r\n            <br />\r\n\r\n            {/*this is our submit button, once admin has filled out the form, the admin can submit- whch calls the handle form submsiion function which handles whatb happens witht he form. */}\r\n            <Buttons type=\"submit\">create product</Buttons>\r\n          </form>\r\n        </div>\r\n        {/*here we conclude the  pop up modal */}\r\n      </PopUpForm>\r\n\r\n      {/*after the pop up modal option- the create product button\r\n\r\nWe have a list of all the product the admin has created.\r\n*/}\r\n      <div className=\"content__manager\">\r\n        {/*table styling */}\r\n        <table border=\"0\" cellPadding=\"0 \" cellSpacing=\"0\">\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                {/*here we have our heading for this section */}\r\n                <h1>Content Manager</h1>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <table\r\n                  //table results\r\n                  className=\"results\"\r\n                  //table styling\r\n                  border=\"0\"\r\n                  cellPadding=\"10 \"\r\n                  cellSpacing=\"0\"\r\n                >\r\n                  <tbody>\r\n                    {/*here we return the products array- the products the admin has created\r\n                    if the length is more that 0, we map the products\r\n                    */}\r\n                    {Array.isArray(data) &&\r\n                      data.length > 0 &&\r\n                      data.map((product, index) => {\r\n                        //constant- we shorten it by assigning all the products asscoiations to product.\r\n                        const {\r\n                          //products name\r\n                          productName,\r\n                          //the image\r\n                          productThumbnail,\r\n                          //cost\r\n                          productPrice,\r\n                          //the unique document id for every product\r\n                          documentID,\r\n                        } = product;\r\n\r\n                        //return the products list\r\n                        return (\r\n                          <tr>\r\n                            {/*below we have our product list  starting with image, anme then price */}\r\n                            <td>\r\n                              {/*the products image */}\r\n                              <img className=\"thumb\" src={productThumbnail} />\r\n                            </td>\r\n                            {/*name */}\r\n                            <td>{productName}</td>\r\n                            {/*price- with staring £ */}\r\n                            <td>£{productPrice}</td>\r\n                            <td>\r\n                              {/*here we have out delete button */}\r\n                              {/*When user clicks the delete button- an action is dispatched. we call the delete function we have imported to handle the removal of this object from the database.*/}\r\n                              <Buttons\r\n                                onClick={() =>\r\n                                  dispatch(deleteProductStart(documentID))\r\n                                }\r\n                              >\r\n                                {/*button name */}\r\n                                Delete\r\n                              </Buttons>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                {/*table styling */}\r\n                <table border=\"0\" cellPadding=\"10 \" cellSpacing=\"0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      {/*here we have our showmore function- we can only show more products if we are not in the final page. */}\r\n                      <td>{!isLastPage && <ShowMore {...createShowMore} />}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//export this admin webpage component wo we can inheirit it on the app.js file.\r\nexport default Admin;\r\n",["691","692"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\App.js",["693"],"//This file is like some kind of controller that controls what is shown up on the website.- here they are given a web url. Here we also give authentication to some pages. We also import our set ups here so we can assign them to the relevant pages.\n\n//IMPORTS\n\n//import react\nimport React, { useEffect } from \"react\";\n//import the styling for all pages.\nimport \"./allPages.scss\";\n\n//There are the authentication files we need, we will use these to wrap around the webpages that need user authentication or admin authentication.\nimport UserAuthNeeded from \"./hComponent/UserAuthNeeded\";\nimport AdminAuthNeeded from \"./hComponent/AdminAuthNeeded\";\n\n//Import the setUps- these are the set of 'set ups' we have for the diffrent pages.Most pages will have the main page setup.\nimport HomePageSetUp from \"./setUps/HomePageSetUp\";\nimport MainPageSetUp from \"./setUps/MainPageSetUp\";\nimport AdminPageSetUp from \"./setUps/AdminPageSetUp\";\n\n//Below we have the set of webpages that this website displays.All these webpages are imported from the webpages folder.\nimport Register from \"./webPages/Register\";\nimport ExtendedOrderHistory from \"./webPages/OrdersPage\";\nimport PaymentForm from \"./webPages/CheckOutPage\";\nimport Admin from \"./webPages/Administrator\";\nimport SignIn from \"./webPages/SignIn\";\nimport Home from \"./webPages/Home\";\nimport Contact from \"./webPages/Contact\";\nimport AboutUs from \"./webPages/AboutUs\";\nimport Terms from \"./webPages/Terms\";\nimport ProductInformation from \"./webPages/ProductInfo\";\nimport ProductDetails from \"./webPages/ProductDetails\";\nimport Panel from \"./webPages/Panel\";\nimport ForgotPass from \"./webPages/ForgotPass\";\nimport Basket from \"./webPages/Basket\";\nimport Browse from \"./webPages/Browse\";\n\n//import redux hook.\nimport { useDispatch } from \"react-redux\";\n//import our user action\nimport { Session } from \"./redux/User/user.actions\";\n//Route used to create path/ and switch to match to routes.\nimport { Switch, Route } from \"react-router-dom\";\nimport AdminBar from \"./components/AdminBar\";\n\n//constant\nconst App = (props) => {\n  //usedisptach hook used to trigger action.\n  const dispatch = useDispatch();\n  //dispatch action when page renders- we call the check userseession function\n  useEffect(() => {\n    dispatch(Session());\n  }, []);\n\n  //We will wrap Route around all of our components. Route is the conditionally shown component that will render some UI when its path matches the current URL.\n\n  return (\n    <div className=\"App\">\n      <AdminBar />\n\n      {/* in additon to <Route/> we also use  The <Switch /> component which will only render the first route that matches/includes the path.\n      \n      Once it locates the first route that matches the path, it will not carry on searching other matches. Furthermore, it will also allow for nested routes to work properly, which is something that <Router /> will not allow.*/}\n\n      <Switch>\n        {/*This is our first route - which is the home page. */}\n        <Route\n          //looks for exact match\n          exact\n          //path\n          path=\"/\"\n          //renders\n          render={() => (\n            //we use the home page setup to set up this page, we wrap it around the home page component\n            <HomePageSetUp>\n              <Home />\n            </HomePageSetUp>\n          )}\n        />\n\n        {/*This route is display the browse page. */}\n        <Route\n          //exact math\n          exact\n          //path url\n          path=\"/search\"\n          //renders\n          render={() => (\n            //Here we use the main page set up.We wrap it around the component which displays the browse page.\n            <MainPageSetUp>\n              <Browse />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*This below is the route to my contact page */}\n\n        <Route\n          //exact match to route\n          exact\n          //path\n          path=\"/contact\"\n          render={() => (\n            //main page setup - wrap it around the component\n            <MainPageSetUp>\n              <Contact />\n            </MainPageSetUp>\n          )}\n        />\n        <Route\n          //exact match to route\n          exact\n          //path\n          path=\"/aboutUs\"\n          render={() => (\n            //main page setup - wrap it around the component\n            <MainPageSetUp>\n              <AboutUs />\n            </MainPageSetUp>\n          )}\n        />\n        <Route\n          //exact match to route\n          exact\n          //path\n          path=\"/terms\"\n          render={() => (\n            //main page setup - wrap it around the component\n            <MainPageSetUp>\n              <Terms />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*This is the route for the product information   */}\n        <Route\n          //exact match\n          exact\n          //path\n          path=\"/productInfo\"\n          //renders\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <ProductInformation />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*This route browse page */}\n        <Route\n          //here we dont have exact- because we have a filter type.\n          path=\"/search/:filterType\"\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <Browse />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*this is the route for the basket page */}\n        <Route\n          //path\n          path=\"/basket\"\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <Basket />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*this is the route for the Payment page when the customer checks out.*/}\n\n        <Route\n          //route/path\n          path=\"/payment\"\n          //renders\n          render={() => (\n            // to access this page we need user authentication- user needs to be signed in.- wrap this authentication mechanism around the set up and component.\n            <UserAuthNeeded>\n              {/*use the main page set up- wrap it around the component.*/}\n              <MainPageSetUp>\n                <PaymentForm />\n              </MainPageSetUp>\n            </UserAuthNeeded>\n          )}\n        />\n\n        {/*this route below renders the register page .*/}\n        <Route\n          //exact match\n          exact\n          //path\n          path=\"/register\"\n          //renders\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <Register />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*this route below renders the register page .*/}\n        <Route\n          //path\n          path=\"/product/:productID\"\n          //renders\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <ProductDetails />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*this route below renders the signin page .*/}\n        <Route\n          //exact match\n          exact\n          //path\n          path=\"/signin\"\n          ///renders\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <SignIn />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*this route below renders the Reset/change password page .*/}\n        <Route\n          //path\n          path=\"/forgotPassword\"\n          //renders\n          render={() => (\n            //use the main page set up- wrap it around the component.\n            <MainPageSetUp>\n              <ForgotPass />\n            </MainPageSetUp>\n          )}\n        />\n\n        {/*this route below renders the Admin page .*/}\n        <Route\n          //path\n          path=\"/AdminArea\"\n          //renders\n          render={() => (\n            // to access this page we need Admin  authentication- only the admin can view and access this page.- wrap this authentication mechanism around the set up and Admin component.\n            <AdminAuthNeeded>\n              {/*use the Admin set up- wrap it around the component.*/}\n              <AdminPageSetUp>\n                <Admin />\n              </AdminPageSetUp>\n            </AdminAuthNeeded>\n          )}\n        />\n\n        {/*this route below renders the previous orders page .*/}\n        <Route\n          path=\"/order/:orderID\"\n          render={() => (\n            // to access this page we need user authentication- user needs to be signed in.- wrap this authentication mechanism around the set up and extended order History component.\n            <UserAuthNeeded>\n              {/*use the main page set up- wrap it around the extendedorderhistory component.*/}\n              <MainPageSetUp>\n                <ExtendedOrderHistory />\n              </MainPageSetUp>\n            </UserAuthNeeded>\n          )}\n        />\n\n        {/*This route below renders the panel page- which is the myaccount page- which displays order history */}\n        <Route\n          //path\n          path=\"/panel\"\n          //renders\n          render={() => (\n            // to access this page we need user authentication- user needs to be signed in.- wrap this authentication mechanism around the set up and panel component.\n            <UserAuthNeeded>\n              {/*use the main page set up- wrap it around the component.*/}\n              <MainPageSetUp>\n                <Panel />\n              </MainPageSetUp>\n            </UserAuthNeeded>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n//export the app\nexport default App;\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\HomeComponent\\index.js",["694","695","696","697","698"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\setUps\\MainPageSetUp.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\CheckOutPage\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\customHooks\\index.js",[],["699","700"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.utils.js",["701"],"//handles when there is an existing cart item\r\nexport const existingCartItem = ({ prevCartItems, nextCartItem }) => {\r\n  return prevCartItems.find(\r\n    (cartItem) => cartItem.documentID === nextCartItem.documentID\r\n  );\r\n};\r\n//handles the add to cart functionlity\r\n//util function\r\n//expect two things- previous item and next item\r\nexport const handleAddToCart = ({ prevCartItems, nextCartItem }) => {\r\n  //increase quantity by 1 when product is added to bakset\r\n  const quantityIncrement = 1;\r\n  //cart item exists\r\n  const cartItemExists = existingCartItem({ prevCartItems, nextCartItem });\r\n  //if cart item exists\r\n  //either returns true or false\r\n  // if true code below will run\r\n  if (cartItemExists) {\r\n    //return cart items\r\n    //hanldes quatity- increases quatity if item aleady exists\r\n    //or just adds item to basket if it doesnt exist\r\n    return prevCartItems.map((cartItem) =>\r\n      //if item is already exits - unique id\r\n      //evaulate the doc id ahaist next item id - if it matches then it means item is already in basket- then icrease quantity\r\n      cartItem.documentID == nextCartItem.documentID\r\n        ? {\r\n            //increment when user adds new product to their cart\r\n            //increment Quantity\r\n            ...cartItem,\r\n            quantity: cartItem.quantity + quantityIncrement,\r\n          }\r\n        : cartItem\r\n    );\r\n  }\r\n  //return the prev basket item\r\n  //add new product to basket\r\n  //pass in prrevious cart items\r\n  return [\r\n    ...prevCartItems,\r\n    {\r\n      //create new basket item- all of the data from next casrt item\r\n      ...nextCartItem,\r\n      quantity: quantityIncrement,\r\n    },\r\n  ];\r\n};\r\n//handles removing products from basket\r\n//takes in prev cart items and next\r\n//return prev items and filter- compare item to doc id and enusre it is not equal to the cart item to remove doc\r\n//only return cart items that do not match items id i attempt to remvoe\r\nexport const handleRemoveCartItem = ({ prevCartItems, cartItemToRemove }) => {\r\n  return prevCartItems.filter(\r\n    (item) => item.documentID !== cartItemToRemove.documentID\r\n  );\r\n};\r\n//handles reducing quantity if poducts in the basket\r\n//helper utlity function\r\n//fucntion expects prev and cart item to reudce\r\nexport const handleReduceCartItem = ({ prevCartItems, cartItemToReduce }) => {\r\n  //existing cart time\r\n  //find method applied on prev items- fidn current item\r\n\r\n  const existingCartItem = prevCartItems.find(\r\n    //compare the current items doc id to check if it matched with cart item to reduc doucment id\r\n    (cartItem) => cartItem.documentID === cartItemToReduce.documentID\r\n  );\r\n  //scenario 1\r\n  //when  cliking reduce quantity when there is only 1 item in the basket\r\n  //essentially remove item from basket\r\n  if (existingCartItem.quantity === 1) {\r\n    //rerun prev items\r\n\r\n    return prevCartItems.filter(\r\n      //get cart item- only return where doc id doesnt matchh existing item id- essentially eeving item from cart\r\n      (cartItem) => cartItem.documentID !== existingCartItem.documentID\r\n    );\r\n  }\r\n  //if there quanity is more than one\r\n  //get current item\r\n  //map through basket items\r\n  return prevCartItems.map((cartItem) =>\r\n    //if docID matches exiditng cart item doc id\r\n    cartItem.documentID === existingCartItem.documentID\r\n      ? {\r\n          //return cart item\r\n          ...cartItem,\r\n          //update he quanity, return -1 qauntity\r\n          quantity: cartItem.quantity - 1,\r\n        }\r\n      : //return cart item\r\n        cartItem\r\n  );\r\n};\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\CreateAcc\\index.js",["702"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ResetPass\\index.js",["703"],"//This file contains the code that resets the users password.\r\n\r\n//import react and react hooks\r\nimport React, { useState, useEffect } from \"react\";\r\n//import form input fields\r\nimport Input from \"../forms/Input\";\r\n//import useDispatch/useSelector from the redux library\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import the user actions\r\nimport { attemptResetPass, resetUser } from \"../../redux/User/user.actions\";\r\n//import the form container- inhert it from formcont folder.\r\nimport FormCont from \"../FormCont\";\r\n//import buttons\r\nimport Buttons from \"../forms/Button\";\r\n//import useHistory so it lets us access the state of the router to navigate from inside our components.\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//mapstate\r\nconst mapState = ({ user }) => ({\r\n  sucessfulPassReset: user.sucessfulPassReset,\r\n  userMistakes: user.userMistakes,\r\n});\r\n\r\n//constnt\r\nconst ResetPassword = (props) => {\r\n  //used to dispatch action\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //useSelector takes in 2 things and returns the suer mistakes and the updated password.\r\n  const { sucessfulPassReset, userMistakes } = useSelector(mapState);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mistakes, setMistakes] = useState([]);\r\n\r\n  //if reset is successfull/ when browser is rendred then push back to sign in page.\r\n  useEffect(() => {\r\n    if (sucessfulPassReset) {\r\n      dispatch(resetUser());\r\n      history.push(\"/signin\");\r\n    }\r\n  }, [sucessfulPassReset]);\r\n\r\n  //if there is an error etc email enetred doesnt exist-it will display error message\r\n  useEffect(() => {\r\n    if (Array.isArray(userMistakes) && userMistakes.length > 0) {\r\n      setMistakes(userMistakes);\r\n    }\r\n  }, [userMistakes]);\r\n\r\n  //handles the form submission when user clicks Reset password\r\n  const handleFormSubmission = (e) => {\r\n    // on submission event prevent the browser to reload/refresh\r\n    e.preventDefault();\r\n    //this below dispatches actions and triggers state changes to the store - user action triggred- email is sent to user\r\n    dispatch(attemptResetPass({ email }));\r\n  };\r\n  //form container - headline(header)- is Enter Email  this case. the form container is inherrited from formcont component.\r\n  const configureFormCont = {\r\n    headline: \" Enter Email\",\r\n  };\r\n\r\n  return (\r\n    //wrap everyhting with form container\r\n\r\n    //error is displayed at the top of container- if there is an error/mistake\r\n    <FormCont {...configureFormCont}>\r\n      <div className=\"form__cont\">\r\n        {mistakes.length > 0 && (\r\n          <ul>\r\n            {mistakes.map((e, index) => {\r\n              return <li key={index}>{e}</li>;\r\n            })}\r\n          </ul>\r\n        )}\r\n        {/*When submitted it calls the handleFormSubmission function */}\r\n        <form onSubmit={handleFormSubmission}>\r\n          {/* the input fields are set here with the types/names and place holders. */}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            handleChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {/*submission- user clicks sign up- triggers/calls handleFromSubmission. */}\r\n          <Buttons type=\"submit\">Reset Password</Buttons>\r\n        </form>\r\n      </div>\r\n      {/*close thee form container with all elements*/}\r\n    </FormCont>\r\n  );\r\n};\r\n//export it so we can inherit it on the webpage file.\r\nexport default ResetPassword;\r\n",["704","705"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\customHooks\\adminAuthentication.js",["706"],["707","708"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Checkout\\Item\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\forms\\Selections\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Panel\\index.js",["709"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Checkout\\index.js",["710"],["711","712"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\setUps\\AdminPageSetUp.js",["713","714"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ProductsResults\\index.js",["715","716","717","718","719"],"//This file contains the code for fthe brosw product page. where user can browse the range of products available.\r\n\r\n//IMPORTS\r\n\r\n//Import react/ and useEffect\r\nimport React, { useEffect } from \"react\";\r\n//import our user action that fethces all the products.\r\nimport { fetchProductsStart } from \"../../redux/Products/products.actions\";\r\n//import the stylesheet that styles this browse page.\r\nimport \"./productList.scss\";\r\n//import from redux library\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EachProduct from \"./EachProduct\";\r\n//inherit the dropdown menu.\r\nimport DropDown from \"../forms/Selections\";\r\n//import useHistory t give us access to history instance and push to other pages.\r\n//useParams returns the object of key/value pairs of URL parameters.\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//showmore - gives us infinites ammount of products- loads a set of products each time it is clicked.\r\nimport ShowMore from \"./../ShowMore\";\r\n\r\n//mapstate\r\nconst mapState = ({ productsData }) => ({\r\n  products: productsData.products,\r\n});\r\n\r\n//constant\r\nconst BrowseProducts = ({}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { products } = useSelector(mapState);\r\n  //filter type - Tv/laptop/accessories/phones\r\n  const { filterType } = useParams();\r\n  //constant\r\n  const { data, queryDoc, isLastPage } = products;\r\n\r\n  //action after page is rendered- filter is applied etc only Tv is shown. fetches products that are only categroised as the filter type.\r\n  useEffect(() => {\r\n    dispatch(fetchProductsStart({ filterType }));\r\n  }, [filterType]);\r\n\r\n  //this below handles when the user alters the product filter from drop down menu.\r\n  //user is pushed to page with only the products that apply with filter.\r\n  const handleProductFilter = (e) => {\r\n    const anotherFilter = e.target.value;\r\n    history.push(`/search/${anotherFilter}`);\r\n  };\r\n  //Below handles the case that there are no products in store or availabe.\r\n  if (!Array.isArray(data)) return null;\r\n  if (data.length < 1) {\r\n    return (\r\n      <div className=\"products\">\r\n        {/*below the messeage is only displayed when there are no products */}\r\n        <p>\r\n          We appologies, no products of this category available at this momment\r\n          of time\r\n        </p>\r\n        <p>Please Visit Another Time.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //here below we create the filters\r\n  //also create the relevent options\r\n  // handlechange  is used to set a new state for the input.\r\n  const createFilters = {\r\n    defaultValue: filterType,\r\n    options: [\r\n      {\r\n        name: \"Show all\",\r\n        value: \"\",\r\n      },\r\n      {\r\n        name: \"Tv's\",\r\n        value: \"tv's\",\r\n      },\r\n      {\r\n        name: \"Phones\",\r\n        value: \"phones\",\r\n      },\r\n      {\r\n        name: \"Laptops\",\r\n        value: \"laptops\",\r\n      },\r\n      {\r\n        name: \"Accessories\",\r\n        value: \"accessories\",\r\n      },\r\n    ],\r\n\r\n    handleChange: handleProductFilter,\r\n  };\r\n\r\n  //this is the fuction that fetches more products every time you click show more.\r\n  const handleShowMoreEvent = () => {\r\n    dispatch(\r\n      fetchProductsStart({\r\n        filterType,\r\n        startAfterDoc: queryDoc,\r\n        persistProducts: data,\r\n      })\r\n    );\r\n  };\r\n  //when user clicks showmore then it calls the function that handles what happens when you click showmore.\r\n  const CreateShowMoreE = {\r\n    onLoadMoreEvt: handleShowMoreEvent,\r\n  };\r\n\r\n  //returned on the browse page.\r\n  return (\r\n    <div className=\"products\">\r\n      {/*page title */}\r\n      {/* <h1>Browse Products</h1> */}\r\n      {/*the drop down menu where user can select/ apply filters */}\r\n      <DropDown {...createFilters} />\r\n\r\n      {/*maps all the products- 3 categories that make up each product */}\r\n      <div className=\"products__list\">\r\n        {data.map((product, pos) => {\r\n          const { productThumbnail, productName, productPrice } = product;\r\n          {\r\n            /*if there is no product then it is undefined. */\r\n          }\r\n          if (\r\n            !productThumbnail ||\r\n            !productName ||\r\n            typeof productPrice === \"undefined\"\r\n          )\r\n            return null;\r\n          {\r\n            /*here we configure/create he product with 3 categories. */\r\n          }\r\n          const createProduct = {\r\n            ...product,\r\n          };\r\n          {\r\n            /*Create each product and display it on the webpage individually- each unique product has unique documentID/ID */\r\n          }\r\n          return <EachProduct key={pos} {...createProduct} />;\r\n        })}\r\n      </div>\r\n      {/*if its not the last page then infitnite scroll will continue, it will call the createShowmoreE fucntion everytime user clicks button */}\r\n      {!isLastPage && <ShowMore {...CreateShowMoreE} />}\r\n    </div>\r\n  );\r\n};\r\n//export  so we can in herit onthe browse web page.\r\nexport default BrowseProducts;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Profile\\index.js",["720"],"//this  file contains the code for the top side of the admin menu. The user name is displayed with a profile picture.\r\n\r\n//IMPORTS\r\n\r\n//import react to use react components\r\nimport React from \"react\";\r\n//import the stylesheet for this page,\r\nimport \"./profile.scss\";\r\n//import the profile pic the admin choses to have.\r\nimport adminIMG from \"./../../images/adminProf.png\";\r\n\r\n//constant\r\nconst Profile = (props) => {\r\n  //the current user variable - holds user data\r\n  const { currentUser } = props;\r\n  // Display name is the name or the currentUser.\r\n  const { displayName } = currentUser;\r\n\r\n  //returns elements displayed.\r\n  return (\r\n    //container for admin profile\r\n    //classname used bem convention\r\n    <div className=\"admin__profile\">\r\n      <ul>\r\n        <li>\r\n          {/* creates a div tag for the image, displays backgorund image */}\r\n          <div className=\"img\">\r\n            <img src={adminIMG} />\r\n          </div>\r\n        </li>\r\n        <li>\r\n          {/*stores display name for user and displays it whichever user is logged in */}\r\n          <span className=\"admin__name\">{displayName && displayName}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n//exported so it can be inherited by any page that wants to display the user\r\nexport default Profile;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\PaymentForm\\index.js",["721","722"],"//This file contains code that handles payment, it dispplays the payment form and handles inputs. I have included shipping details aswell as billing as these might not always be the same.\r\n\r\n//this page also call several fucntions from stripe to handle the payment.\r\n\r\n//IMPORTS\r\n\r\n//import react and react hooks.\r\nimport React, { useState, useEffect } from \"react\";\r\n//import the stripe elements needed in order to complete payment.\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n//inherit the form input fields from input file- code reuseability.\r\nimport Input from \"../forms/Input\";\r\n//inherit the buttons from button file.\r\nimport Buttons from \"../forms/Button\";\r\n//import countrydrop down-list of countries\r\nimport { CountryDropdown } from \"react-country-region-selector\";\r\n//import api instacnce-n includes out baseurl.\r\nimport { apiInstance } from \"../../Service\";\r\n//these below are our selectors\r\nimport {\r\n  selectCartTotal,\r\n  selectCartItemsCount,\r\n  selectCartItems,\r\n} from \"../../redux/Cart/cart.selectors\";\r\n//this below stores our order so we can fetch it to display on prevoius orders page.\r\nimport { saveOrderHistory } from \"../../redux/Orders/orders.actions\";\r\nimport { clearCart } from \"../../redux/Cart/cart.actions\";\r\n//import from reselect\r\nimport { createStructuredSelector } from \"reselect\";\r\n//import redux hooks\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//import usehistory - gives us access to history instance- alos enables us to push to diffrent pages.\r\nimport { useHistory } from \"react-router-dom\";\r\n//import the styling for this page.\r\nimport \"./payment.scss\";\r\n\r\n//below shows the the starting states of the address. but in this case this should be left blank for user input.\r\n\r\nconst StartingStates = {\r\n  line1: \"\",\r\n  line2: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  postal_code: \"\",\r\n  country: \"\",\r\n};\r\n// the createStructuredSelector would take an object whose properties are input-selectors and returns a structured selector.\r\n//take in ou selectors - would store/used to return products.\r\nconst mapState = createStructuredSelector({\r\n  total: selectCartTotal,\r\n  itemCount: selectCartItemsCount,\r\n  cartItems: selectCartItems,\r\n});\r\n\r\n//constant\r\nconst PaymentFormComp = () => {\r\n  //usehistory assigned to hsitory variable.\r\n  const history = useHistory();\r\n  //stripe\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  //the total price and products/items stored.\r\n  const { total, itemCount, cartItems } = useSelector(mapState);\r\n  //used to dispcth actions\r\n  const dispatch = useDispatch();\r\n\r\n  //our billing address\r\n  const [billingAddress, setBillingAddress] = useState({\r\n    // when page renders change it to the starting state.\r\n    ...StartingStates,\r\n  });\r\n  //our shipping address\r\n  const [shippingAddress, setShippingAddress] =\r\n    // when page renders change it to the starting state.\r\n    useState({\r\n      ...StartingStates,\r\n    });\r\n\r\n  //constant of the recpeients name- state- set to blank\r\n\r\n  const [recipientName, setRecipientName] = useState(\"\");\r\n  //constant of the name on card- state- set to blank\r\n  const [nameOnCard, setNameOnCard] = useState(\"\");\r\n\r\n  //afer page renders- if the item count is less than 1, user is pushed back to your account page.\r\n  useEffect(() => {\r\n    if (itemCount < 1) {\r\n      history.push(\"/panel\");\r\n    }\r\n  }, [itemCount]);\r\n\r\n  // this below handles the shipping.\r\n  const handleShippingDetails = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setShippingAddress({\r\n      //all shipping address elements reduced and set to shipping address.\r\n      ...shippingAddress,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //this below handles the billing\r\n  const handleBillingDetails = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setBillingAddress({\r\n      //this sets the billing address. billing address includes the full billing address and stored as 'billingAddress'\r\n      ...billingAddress,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // this handles the event when the user submits the payment form.\r\n\r\n  const handleFormSubmit = async (evt) => {\r\n    //the browser is preveneted from reloading/refreshing\r\n    evt.preventDefault();\r\n    //define/fetch card element\r\n    const cardElement = elements.getElement(\"card\");\r\n    //this if statement in other words will not allow user to submit payment if the following fields afre not filled out. only address line line2 is optional.\r\n    if (\r\n      //required fields for submission\r\n      //shipping addreeses that are required\r\n      !shippingAddress.line1 ||\r\n      !shippingAddress.city ||\r\n      !shippingAddress.state ||\r\n      !shippingAddress.postal_code ||\r\n      !shippingAddress.country ||\r\n      //billing addresses that are required.\r\n      !billingAddress.line1 ||\r\n      !billingAddress.city ||\r\n      !billingAddress.state ||\r\n      !billingAddress.postal_code ||\r\n      !billingAddress.country ||\r\n      !recipientName ||\r\n      !nameOnCard\r\n    ) {\r\n      return;\r\n    }\r\n    //api instance - imported from from service file.\r\n    apiInstance\r\n      //post\r\n      //POST is used to send data to the API server to create payment.\r\n      .post(\"/payments/create\", {\r\n        //the total needs to be multiplied by 100.\r\n        amount: total * 100,\r\n        //address\r\n        shipping: {\r\n          //recpient name  is the stored as name\r\n          name: recipientName,\r\n\r\n          // the address includes mainly shipping address- where customer lives.\r\n          address: {\r\n            ...shippingAddress,\r\n          },\r\n        },\r\n      })\r\n      //client secret\r\n      .then(({ data: clientSecret }) => {\r\n        stripe\r\n          //this creates payment method.\r\n          .createPaymentMethod({\r\n            type: \"card\",\r\n            card: cardElement,\r\n            //the payment method takes billing details rather than shipping as billing is about details on the card.\r\n\r\n            billing_details: {\r\n              //takes in the name on the card as name.\r\n              name: nameOnCard,\r\n              //takes in customers billing address.\r\n              address: {\r\n                ...billingAddress,\r\n              },\r\n            },\r\n          })\r\n          .then(({ paymentMethod }) => {\r\n            //stripe functions\r\n            //confirms payment\r\n            stripe\r\n              .confirmCardPayment(clientSecret, {\r\n                payment_method: paymentMethod.id,\r\n              })\r\n              //paymentintent encapsulates details about the transaction,\r\n              .then(({ paymentIntent }) => {\r\n                //this below creates the order- so it can be saved as part of order history\r\n                const createOrder = {\r\n                  //total price of order\r\n                  orderTotal: total,\r\n                  //total items ordered by customer\r\n\r\n                  //the order items are mapped- each item.\r\n                  orderItems: cartItems.map((item) => {\r\n                    //we create an constant to store all the item details-price,documentID, productname etc, to item.\r\n                    const {\r\n                      //product details\r\n                      documentID,\r\n                      productThumbnail,\r\n                      productName,\r\n                      productPrice,\r\n                      quantity,\r\n                      //store it to item.\r\n                    } = item;\r\n\r\n                    //return item/product details\r\n                    return {\r\n                      //we need these to save it as prevoius orders.\r\n                      documentID,\r\n                      productThumbnail,\r\n                      productName,\r\n                      productPrice,\r\n                      quantity,\r\n                    };\r\n                  }),\r\n                };\r\n                //dispath an action that triggers and calls a function that saves the order- creates order.\r\n                dispatch(saveOrderHistory(createOrder));\r\n              });\r\n          });\r\n      });\r\n  };\r\n  //here we style the card element- which is the card number/cvc fields.\r\n  const createCardElement = {\r\n    iconStyle: \"solid\",\r\n    style: {\r\n      base: {\r\n        //font size\r\n        fontSize: \"16px\",\r\n      },\r\n    },\r\n    //hides postal code- we dont really need this as part of payment process.\r\n    hidePostalCode: true,\r\n  };\r\n\r\n  //return form\r\n  return (\r\n    <div className=\"payment__details\">\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"class\">\r\n          {/*subheading for page */}\r\n          <h2>Shipping Address</h2>\r\n          {/*these below are the input fields for the shipping address */}\r\n\r\n          {/*this below is the name field- it is required in order to process payment */}\r\n\r\n          <Input\r\n            required\r\n            placeholder=\"Recipient Name\"\r\n            name=\"recipientName\"\r\n            handleChange={(evt) => setRecipientName(evt.target.value)}\r\n            value={recipientName}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field line1 address- reuqired */}\r\n          <Input\r\n            required\r\n            placeholder=\"Line 1\"\r\n            name=\"line1\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.line1}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field line 2 address optional */}\r\n          <Input\r\n            placeholder=\"Line 2\"\r\n            name=\"line2\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.line2}\r\n            type=\"text\"\r\n          />\r\n\r\n          <Input\r\n            required\r\n            placeholder=\"City\"\r\n            name=\"city\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.city}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field county*/}\r\n          <Input\r\n            required\r\n            placeholder=\"County\"\r\n            name=\"state\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.state}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field poste code */}\r\n          <Input\r\n            required\r\n            placeholder=\"Postal Code\"\r\n            name=\"postal_code\"\r\n            //when user inputs something into that form fields- handle shippingDetails function is called.\r\n            handleChange={(evt) => handleShippingDetails(evt)}\r\n            value={shippingAddress.postal_code}\r\n            type=\"text\"\r\n          />\r\n          {/*the input field drop down country - what country user resides in.  */}\r\n          <div className=\"formRow checkoutInput\">\r\n            <CountryDropdown\r\n              required\r\n              //when user inputs something into that form fields- handle shippingDetails function is called.\r\n              onChange={(val) =>\r\n                handleShippingDetails({\r\n                  target: {\r\n                    name: \"country\",\r\n                    value: val,\r\n                  },\r\n                })\r\n              }\r\n              value={shippingAddress.country}\r\n              valueType=\"short\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"class\">\r\n          <h2>Billing Address</h2>\r\n          {/*these below are the input fields for the billing address */}\r\n          <Input\r\n            required\r\n            placeholder=\"Name on Card\"\r\n            name=\"nameOnCard\"\r\n            //we call setonnamecard- when name is entred\r\n            handleChange={(evt) => setNameOnCard(evt.target.value)}\r\n            value={nameOnCard}\r\n            type=\"text\"\r\n          />\r\n          {/*cusotmers address line 1 required*/}\r\n          <Input\r\n            required\r\n            placeholder=\"Line 1\"\r\n            name=\"line1\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.line1}\r\n            type=\"text\"\r\n          />\r\n          {/*line 2 address not compulsory */}\r\n          <Input\r\n            placeholder=\"Line 2\"\r\n            name=\"line2\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.line2}\r\n            type=\"text\"\r\n          />\r\n          {/*City field - etc Birmingham */}\r\n          <Input\r\n            required\r\n            placeholder=\"City\"\r\n            name=\"city\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.city}\r\n            type=\"text\"\r\n          />\r\n          {/*input field for county or borough */}\r\n          <Input\r\n            required\r\n            placeholder=\"County\"\r\n            name=\"state\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.state}\r\n            type=\"text\"\r\n          />\r\n          {/*postal code- required*/}\r\n          <Input\r\n            required\r\n            placeholder=\"Postal Code\"\r\n            name=\"postal_code\"\r\n            //when user inputs something into that form fields- handle billing Details function is called.\r\n            handleChange={(evt) => handleBillingDetails(evt)}\r\n            value={billingAddress.postal_code}\r\n            type=\"text\"\r\n          />\r\n          {/*this below is the country drop down- displays all the countries- user can select */}\r\n          <div className=\"formRow checkoutInput\">\r\n            <CountryDropdown\r\n              required\r\n              //when user inputs something into that form fields- handle billing Details function is called.\r\n              onChange={(val) =>\r\n                handleBillingDetails({\r\n                  target: {\r\n                    name: \"country\",\r\n                    value: val,\r\n                  },\r\n                })\r\n              }\r\n              value={billingAddress.country}\r\n              valueType=\"short\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {/*this below is the card details area, */}\r\n        <div className=\"card__details\">\r\n          {/*subheader*/}\r\n          <h2>Card Details</h2>\r\n\r\n          <CardElement options={createCardElement} />\r\n        </div>\r\n\r\n        <p>\r\n          {\" \"}\r\n          Please Confirm you have read our terms and conditions before you\r\n          proceed.\r\n        </p>\r\n\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"Conditions\"\r\n          name=\"comfirm\"\r\n          value=\"Boat\"\r\n          required\r\n        ></input>\r\n\r\n        <p> Please Confirm all your details are correct.</p>\r\n\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"review\"\r\n          name=\"comfirm\"\r\n          value=\"Boat\"\r\n          required\r\n        ></input>\r\n\r\n        {/*the payment submission button */}\r\n        <Buttons type=\"submit\">Pay Now</Buttons>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n//export this file so we can inherit it on the checkoutpage.\r\nexport default PaymentFormComp;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\hComponent\\UserAuthNeeded.js",[],["723","724"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\customHooks\\userAuthentication.js",["725"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\ProductDetails\\index.js",["726"],"//this file contains code that imports the product information page\r\n\r\n//IMPORTS\r\n\r\n//import react\r\nimport React from \"react\";\r\n//import component- contains code for product info code\r\nimport Productinfos from \"../../components/ProductInfos\";\r\n\r\n//constant\r\nconst ProductDetails = ({}) => {\r\n  return (\r\n    <div>\r\n      {/*product information component displayed on web page */}\r\n      <Productinfos />\r\n    </div>\r\n  );\r\n};\r\n//export this so we can import it on app.js\r\nexport default ProductDetails;\r\n",["727","728"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.actions.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.sagas.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.helpers.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Products\\products.reducer.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\firebase\\configure.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\forms\\Input\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.selectors.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\rootReducer.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\rootSaga.js",[],["729","730"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\LogIn\\index.js",["731"],"//this file contains code for the login page where the user can log in with his email and password.\r\n\r\n//IMPORTS\r\n\r\n//inherit button form buttons component\r\nimport Buttons from \"./../forms/Button\";\r\n//inherit form input fields from Input\r\nimport Input from \"./../forms/Input\";\r\n//import react and react hooks\r\nimport React, { useState, useEffect } from \"react\";\r\n//import the styling for this page\r\nimport \"./logIn.scss\";\r\n//import links to enable naviagtion to other pages and import useHisotry t give us access to history instance and push tp other pages.\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n//import from redux library\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//impor the form conatiner\r\nimport FormCont from \"./../FormCont\";\r\n\r\n//import our user actions - login functionalities\r\nimport {\r\n  attemptEmailLogin,\r\n  attemptGoogleLogin,\r\n} from \"./../../redux/User/user.actions\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n});\r\n\r\nconst LogIn = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //constants\r\n  //our useState passes the initial state to this function and it returns a variable with the current state value. etc user entred email. likewise for pass1.\r\n  const [email, setEmail] = useState(\"\");\r\n  const { currentUser } = useSelector(mapState);\r\n  const [pass1, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //after browser renders the form is reset and user is pushed back to the home page.\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      resetForm();\r\n\r\n      history.push(\"/\");\r\n    }\r\n  }, [currentUser]);\r\n  //email/password reste to blank fields\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  //handles the form submission when user clicks sign in\r\n  const handleFormSubmission = (e) => {\r\n    // on submission event prevent the browser to reload/refresh\r\n    e.preventDefault();\r\n    //this below dispatches actions and triggers state changes to the store - user action triggred\r\n    dispatch(attemptEmailLogin({ email, pass1 }));\r\n  };\r\n\r\n  //this below dispatches the action and  triggers our google login from the redux store.\r\n  const handleGoogleLogin = () => {\r\n    dispatch(attemptGoogleLogin());\r\n  };\r\n\r\n  //form container - headline(header)- is Sign in  this case. the form container is inherrited from formcont component.\r\n  const configureFormCont = {\r\n    headline: \"Sign In\",\r\n  };\r\n\r\n  return (\r\n    //wrap everyhting with form container\r\n    <FormCont {...configureFormCont}>\r\n      <div className=\"formCont\">\r\n        {/*When submitted it calls the handleFormSubmission function */}\r\n        {/*All the input fields are set here with their types/names and place holders. */}\r\n        {/*handleChange is used to set a new state for the inputs.*/}\r\n        <form onSubmit={handleFormSubmission}>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            handleChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            name=\"pass1\"\r\n            value={pass1}\r\n            placeholder=\"Password\"\r\n            handleChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/*terms and condition for azoq web application */}\r\n          <p>\r\n            {\" \"}\r\n            By Signing in you agree to AZoQ's Conditions of Use & Sale. Please\r\n            see our Terms and conditions.\r\n          </p>\r\n\r\n          {/*submission- user clicks sign up- triggers/calls handleFromSubmission. */}\r\n          <Buttons type=\"submit\"> Sign in</Buttons>\r\n\r\n          {/*Below is our google login functionalities */}\r\n          <div className=\"s__logIn\">\r\n            <div className=\"row\">\r\n              {/*the onlick event is that it shoudl pop up the google login form that google provides */}\r\n              <Buttons onClick={handleGoogleLogin}>Sign in with Google</Buttons>\r\n            </div>\r\n          </div>\r\n\r\n          {/*We also have an option at the bottom to reset password or for an user to register if he/she doesnt have an account. */}\r\n\r\n          <div className=\"password__reset_register\">\r\n            <Link to=\"/forgotPassword\">Reset Password</Link>\r\n          </div>\r\n          <div className=\"password__reset_register\">\r\n            New to AZoQ? <Link to=\"/register\">Register</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {/*close the form container with all elements*/}\r\n    </FormCont>\r\n  );\r\n};\r\n//export it so we can inherit it on the webpage file.\r\nexport default LogIn;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\PreviousOrders\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\ProductInfos\\index.js",["732","733","734","735"],"// this is the product card page- this page inlcludes product information, - stock, details, price, name and product thumbnail.\r\n//this page enable me to provide more details about each prouct.\r\n//can be accessed by clicking the products thumbail or name.\r\n\r\n//Imports\r\n\r\n//import react\r\nimport React, { useEffect } from \"react\";\r\n//import the redux and react hooks\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//import our fetcher and set product funcitons from our action files\r\nimport {\r\n  fetchProductStart,\r\n  setProduct,\r\n} from \"../../redux/Products/products.actions\";\r\n//add product functionality\r\nimport { addProduct } from \"../../redux/Cart/cart.actions\";\r\n//buttons- enables buttons on the page\r\nimport Buttons from \"../forms/Button\";\r\n//styling for this page\r\nimport \"./productInfoS.scss\";\r\n//import from react-router\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\n\r\n//maps products\r\nconst mapState = (state) => ({\r\n  product: state.productsData.product,\r\n});\r\n\r\n//our const\r\nconst Productinfos = ({}) => {\r\n  //initalize and construct before we can apply them\r\n  //dispatch used to dispacth diffrent actions\r\n  const dispatch = useDispatch();\r\n  //creates hisotry instance\r\n  const history = useHistory();\r\n  //url params- product it- unique\r\n  const { productID } = useParams();\r\n  const { product } = useSelector(mapState);\r\n\r\n  //these factors below define a product\r\n  //they are saved as a product\r\n  const {\r\n    //name\r\n    productName,\r\n    //price\r\n    productPrice,\r\n    //image\r\n    productThumbnail,\r\n    //details about product\r\n    productInformation,\r\n    //stock\r\n    stock,\r\n  } = product;\r\n  //when browser renders- fetch product asscociated with product id from params\r\n  useEffect(() => {\r\n    dispatch(fetchProductStart(productID));\r\n    //reset back to empty object\r\n    //avoid delay\r\n    // used to unsubscribe from events\r\n    return () => {\r\n      dispatch(setProduct({}));\r\n    };\r\n  }, []);\r\n\r\n  //hanldes what happens when user clicks add to basket.\r\n  const handleBasketAddition = (product) => {\r\n    if (!product) return;\r\n    //dispatch add product function\r\n    dispatch(addProduct(product));\r\n    //pushes user to basket\r\n    history.push(\"/basket\");\r\n  };\r\n  //add to basket configuration\r\n  const configureAddToBasketButton = {\r\n    //button type\r\n    type: \"button\",\r\n  };\r\n\r\n  //returned on the web page\r\n  return (\r\n    //this class includes all the product details.\r\n    //Bem Convention\r\n    <div className=\"product__information\">\r\n      <div className=\"product__thumbnail\">\r\n        {/*a large image of the product image etc large image of a laptop/ this image displays whichever product user/customer clciked on. */}\r\n        <img src={productThumbnail} />\r\n      </div>\r\n      <div className=\"product__info\">\r\n        <ul>\r\n          <li>\r\n            {/* in large writing the products name is displayed */}\r\n            <h1>{productName}</h1>\r\n          </li>\r\n          <li>\r\n            {/*products price is illustarted below the products name */}\r\n            <span>£{productPrice}</span>\r\n          </li>\r\n          <li>\r\n            {/*stock - this could say limited eddition or selling fast- depending on product */}\r\n            <span>{stock}</span>\r\n          </li>\r\n          <li>\r\n            {/*div class for our buttons */}\r\n            <div className=\"add__Basket\">\r\n              {/*when button is clicked it calls our handle function- which enables me to add product to basket. */}\r\n              <Buttons\r\n                {...configureAddToBasketButton}\r\n                onClick={() => handleBasketAddition(product)}\r\n              >\r\n                Add to Basket\r\n              </Buttons>\r\n              {/*this below are the buttons at the bottom of the basket page. */}\r\n              {/*we imported history so we could have the functionality below, it would take you back to the page user came from */}\r\n              <Buttons onClick={() => history.goBack()}>\r\n                Continue shopping\r\n              </Buttons>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            {/*this is is our check editior results- displays product details */}\r\n            <span\r\n              className=\"product__infos\"\r\n              // we need dangerouslySetInnerHTML as it is a attribute under DOM elements in React. utlising dangerouslySetInnerHTML , i can set HTML directly from React.\r\n              // without this the prodcuts information is not displayed correctly\r\n              dangerouslySetInnerHTML={{ __html: productInformation }}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Productinfos;\r\n",["736","737"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\ProductInfo\\index.js",["738","739"],"//This was a static page- to be used for each product- However i opted agaist using this page so this will not be displayed on the web application like this.\r\n\r\n//this was just temporary solution if i didnt get it to work dynamically\r\n\r\n//this page contains code for the product details for each product.  Below is details about a specific TV.\r\n\r\n//import react\r\nimport React from \"react\";\r\n//import product image\r\nimport TV from \"./../../images/tv3.jpg\";\r\n//import link so we can use links thorughout this page\r\nimport { Link } from \"react-router-dom\";\r\n//import buttons - inherit from the button component\r\nimport Buttons from \"../../components/forms/Button\";\r\n\r\n//constant\r\nconst ProductInformation = ({}) => {\r\n  return (\r\n    // Here below we return all the products information and specifications for customers to review.\r\n    <div className=\"product__header\">\r\n      <h1>43'' LG Smart TV </h1>\r\n      <div className=\"container\">\r\n        <div className=\"product__image\">\r\n          {/*product image */}\r\n          <img src={TV} alt=\"tv\" />\r\n        </div>\r\n        <p></p>\r\n\r\n        <h2>£499.99</h2>\r\n        <h4>Display</h4>\r\n        <ul>\r\n          <li>Display Device: LED</li>\r\n          <li> Resolution: 1920 x 1080</li>\r\n        </ul>\r\n\r\n        <h4>Video</h4>\r\n        <ul>\r\n          <li>PMI (Picture Mastering Index) : 450</li>\r\n          <li>Picture Engine : Triple XD Engine</li>\r\n          <li>Active Noise Reduction : Yes</li>\r\n          <li> Dynamic Colour Enhancer : Yes</li>\r\n          <li> Aspect Ratio Yes : 6 modes </li>\r\n        </ul>\r\n        <h4>Audio</h4>\r\n        <ul>\r\n          <li>Audio Output/Speaker System : 10W/ \"2ch</li>\r\n          <li>Surround Mode: Virtual surround Plus</li>\r\n          <li>Clear Voice :Clear Voice III</li>\r\n          <li> Optical Sound Sync : Yes</li>\r\n        </ul>\r\n        <h4>Smart TV</h4>\r\n        <ul>\r\n          <li>OS : webOS 3.0</li>\r\n          <li>Magic Mobile Connection : Yes</li>\r\n          <li>My Channels : Yes</li>\r\n          <li> My Starter: Yes</li>\r\n          <li> Channel Advisor : Yes </li>\r\n          <li> LG Smart World: Yes </li>\r\n          <li> Web Browser : Yes </li>\r\n        </ul>\r\n        <div>\r\n          {/* button includes a link for you to return to previous page. */}\r\n          <Link to=\"/search/tv's\">\r\n            <Buttons>\r\n              <a>return</a>\r\n            </Buttons>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//export it so we can use it on app.js to display it on the website.\r\nexport default ProductInformation;\r\n",["740","741"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Register\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\OrdersPage\\index.js",["742"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Orders\\orders.reducer.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Orders\\orders.actions.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\User\\user.helpers.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\firebase\\utilation.js",["743"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.types.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\FormCont\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Contact\\index.js",["744","745","746"],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\AboutUs\\index.js",["747","748","749"],"//This file contains code for the admin page. this file contais the code allows a pop up form to be dipslayed so the admin can create a product, admin can also delete a product. The admins profile is also displayed here.\r\n\r\n//Import react and import our react hooks\r\nimport React, { useState, useEffect } from \"react\";\r\nimport logoAbout from \"./../../images/logoAbout.png\";\r\n\r\n//constant\r\nconst AboutUs = (props) => {\r\n  //return\r\n  return (\r\n    <div className=\"admin__profile\">\r\n      <ul>\r\n        <li>\r\n          {/* creates a div tag for the image, displays backgorund image */}\r\n          <div className=\"img\">\r\n            <img src={logoAbout} />\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <span className=\"admin__name\">Who We Are</span>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"about\">\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\r\n          commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus\r\n          et magnis dis parturient montes, nascetur ridiculus mus. Donec quam\r\n          felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\r\n          consequat massa quis enim. Donec pede justo, fringilla vel, aliquet\r\n          nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a,\r\n          venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium.\r\n          Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean\r\n          vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat\r\n          vitae, eleifend ac, enim. Aliquam lorem\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\r\n          commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus\r\n          et magnis dis parturient montes, nascetur ridiculus mus. Donec quam\r\n          felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\r\n          consequat massa quis enim. Donec pede justo, fringilla vel, aliquet\r\n          nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a,\r\n          venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium.\r\n          Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean\r\n          vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat\r\n          vitae, eleifend ac, enim. Aliquam lorem\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//export this aboutus webpage component wo we can inheirit it on the app.js file.\r\nexport default AboutUs;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\SignIn\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Terms\\index.js",["750","751","752"],"///This file contains code for the admin page. this file contais the code allows a pop up form to be dipslayed so the admin can create a product, admin can also delete a product. The admins profile is also displayed here.\r\n\r\n//Import react and import our react hooks\r\nimport React, { useState, useEffect } from \"react\";\r\nimport logoAbout from \"./../../images/logoAbout.png\";\r\n//constant\r\nconst AboutUs = (props) => {\r\n  //return\r\n  return (\r\n    <div className=\"admin__profile\">\r\n      <ul>\r\n        <li>\r\n          {/* creates a div tag for the image, displays backgorund image */}\r\n          <div className=\"img\">\r\n            <img src={logoAbout} />\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <span className=\"admin__name\">Terms and Conditions</span>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"about\">\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\r\n          commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus\r\n          et magnis dis parturient montes, nascetur ridiculus mus. Donec quam\r\n          felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\r\n          consequat massa quis enim. Donec pede justo, fringilla vel, aliquet\r\n          nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a,\r\n          venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium.\r\n          Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean\r\n          vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat\r\n          vitae, eleifend ac, enim. Aliquam lorem\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\r\n          commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus\r\n          et magnis dis parturient montes, nascetur ridiculus mus. Donec quam\r\n          felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\r\n          consequat massa quis enim. Donec pede justo, fringilla vel, aliquet\r\n          nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a,\r\n          venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium.\r\n          Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean\r\n          vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat\r\n          vitae, eleifend ac, enim. Aliquam lorem{\" \"}\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\r\n            commodo ligula eget dolor. Aenean massa. Cum sociis natoque\r\n            penatibus et magnis dis parturient montes, nascetur ridiculus mus.\r\n            Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem.\r\n            Nulla consequat massa quis enim. Donec pede justo, fringilla vel,\r\n            aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut,\r\n            imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede\r\n            mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum\r\n            semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula,\r\n            porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem\r\n          </p>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//export this aboutus webpage component wo we can inheirit it on the app.js file.\r\nexport default AboutUs;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\OrderInformation\\index.js",["753","754","755","756","757"],"//This file contains code that produces specific order information about each product and produces an image thumbnail.\r\n\r\n//IMPORTS\r\n\r\n//import react/ and useeffect\r\nimport React, { useEffect } from \"react\";\r\n//import useDispatch from redux library\r\nimport { useDispatch } from \"react-redux\";\r\n//import our order action.\r\nimport { setOrderDetails } from \"../../redux/Orders/orders.actions\";\r\n\r\n//Material-UI provides an optional CssBaseline component.- provides responsive tables- table components.\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\n\r\n//below is a list of the table collumns we have that store the orders information.\r\nconst Tablecolumns = [\r\n  {\r\n    id: \"productThumbnail\",\r\n    label: \"\",\r\n  },\r\n  {\r\n    id: \"productName\",\r\n    label: \"Name\",\r\n  },\r\n  {\r\n    id: \"productPrice\",\r\n    label: \"Price\",\r\n  },\r\n  {\r\n    id: \"quantity\",\r\n    label: \"Quantity\",\r\n  },\r\n];\r\n//this below styles our tables.\r\n//font size 15 for table headers.\r\nconst inLineCss = {\r\n  fontSize: \"15px\",\r\n  width: \"10%\",\r\n};\r\n//this formats text and gives us text layout etc date layout/ price layout.\r\nconst textLay = (columnName, columnValue) => {\r\n  switch (columnName) {\r\n    case \"productPrice\":\r\n      {\r\n        /*returns products price */\r\n      }\r\n      return `£${columnValue}`;\r\n    case \"productThumbnail\":\r\n      {\r\n        /*returns products image */\r\n      }\r\n      return <img src={columnValue} width={280} />;\r\n    default:\r\n      {\r\n        /*returns collumns value. */\r\n      }\r\n      return columnValue;\r\n  }\r\n};\r\n\r\nconst OrderDetails = ({ order }) => {\r\n  const dispatch = useDispatch();\r\n  const orderItems = order && order.orderItems;\r\n\r\n  //when page is rendered fetch the information on that specific order.\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setOrderDetails({}));\r\n    };\r\n  }, []);\r\n\r\n  //return the table components\r\n  return (\r\n    //wrap table around table container.\r\n    //table format/componenets provided by material ui.\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {Tablecolumns.map((col, pos) => {\r\n              //apply the inlinecss to all text on the table and style table. diffrent lable for each table cell- formatting header.\r\n\r\n              return (\r\n                <TableCell key={pos} style={inLineCss}>\r\n                  {col.label}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        {/*close the table head, now look to the table contents */}\r\n        <TableBody>\r\n          {/*display the details if there are order made. */}\r\n          {/*map each order items etc Tv,laptop to a diffrent row. showing a breakdown of prices/ and quantity. aswell as total cost of the order. */}\r\n          {Array.isArray(orderItems) &&\r\n            orderItems.length > 0 &&\r\n            orderItems.map((row, pos) => {\r\n              return (\r\n                <TableRow key={pos}>\r\n                  {Tablecolumns.map((col, pos) => {\r\n                    const columnName = col.id;\r\n                    const columnValue = row[columnName];\r\n\r\n                    return (\r\n                      //this below displays the styled tables headers and styled text-name/price/quantity for each table cell\r\n                      <TableCell key={pos} style={inLineCss}>\r\n                        {textLay(columnName, columnValue)}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {/*close table container with all table elements. */}\r\n    </TableContainer>\r\n  );\r\n};\r\n//export this so we can inherit it in other components\r\nexport default OrderDetails;\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Orders\\orders.helpers.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\Menus\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\components\\AdminBar\\index.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\stripePayment\\publicKeyStripe.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\Cart\\cart.reducer.js",[],"C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\redux\\createStore.js",["758"],"//this file contains code that creates our reduc store\r\n\r\n//IMPORTS\r\n\r\n//import create store and apply middleware from redux\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n//import redux lgger\r\nimport logger from \"redux-logger\";\r\n//import reduc thunk\r\nimport thunk from \"redux-thunk\";\r\n//import from redux saga\r\nimport createSagaMiddle from \"redux-saga\";\r\n//immport perists\r\nimport { persistStore } from \"redux-persist\";\r\n//imporrt root reducer\r\nimport rootReducer from \"./rootReducer\";\r\n//import root saga\r\nimport rootSaga from \"./rootSaga\";\r\n\r\n//saga middleware\r\nconst sagaMiddleware = createSagaMiddle();\r\n//export middleware- takes in\r\nexport const middlewares = [thunk, sagaMiddleware, logger];\r\n//apply middleware and take in root reducer\r\n//saved onto store\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n//perisistor- persists the redux store\r\nexport const persistor = persistStore(store);\r\n\r\n//export the reduc store\r\n//export the peristor\r\nexport default {\r\n  store,\r\n  persistor,\r\n};\r\n","C:\\Users\\Abdullahi shidane\\Documents\\react\\react\\src\\webPages\\Browse\\index.js",["759"],{"ruleId":"760","severity":1,"message":"761","line":48,"column":6,"nodeType":"762","endLine":48,"endColumn":8,"suggestions":"763"},{"ruleId":"764","replacedBy":"765"},{"ruleId":"766","replacedBy":"767"},{"ruleId":"768","severity":1,"message":"769","line":11,"column":17,"nodeType":"770","messageId":"771","endLine":11,"endColumn":19},{"ruleId":"764","replacedBy":"772"},{"ruleId":"766","replacedBy":"773"},{"ruleId":"760","severity":1,"message":"761","line":32,"column":6,"nodeType":"762","endLine":32,"endColumn":8,"suggestions":"774"},{"ruleId":"775","severity":1,"message":"776","line":176,"column":31,"nodeType":"777","endLine":176,"endColumn":79},{"ruleId":"764","replacedBy":"778"},{"ruleId":"766","replacedBy":"779"},{"ruleId":"760","severity":1,"message":"780","line":38,"column":6,"nodeType":"762","endLine":38,"endColumn":8,"suggestions":"781"},{"ruleId":"768","severity":1,"message":"769","line":13,"column":29,"nodeType":"770","messageId":"771","endLine":13,"endColumn":31},{"ruleId":"782","severity":1,"message":"783","line":61,"column":15,"nodeType":"777","endLine":61,"endColumn":18},{"ruleId":"764","replacedBy":"784"},{"ruleId":"766","replacedBy":"785"},{"ruleId":"760","severity":1,"message":"786","line":30,"column":6,"nodeType":"762","endLine":30,"endColumn":8,"suggestions":"787"},{"ruleId":"768","severity":1,"message":"769","line":28,"column":25,"nodeType":"770","messageId":"771","endLine":28,"endColumn":27},{"ruleId":"760","severity":1,"message":"761","line":40,"column":6,"nodeType":"762","endLine":40,"endColumn":18,"suggestions":"788"},{"ruleId":"789","severity":1,"message":"790","line":121,"column":11,"nodeType":"791","messageId":"792","endLine":123,"endColumn":12},{"ruleId":"789","severity":1,"message":"790","line":130,"column":11,"nodeType":"791","messageId":"792","endLine":132,"endColumn":12},{"ruleId":"789","severity":1,"message":"790","line":136,"column":11,"nodeType":"791","messageId":"792","endLine":138,"endColumn":12},{"ruleId":"760","severity":1,"message":"793","line":50,"column":6,"nodeType":"762","endLine":50,"endColumn":19,"suggestions":"794"},{"ruleId":"789","severity":1,"message":"795","line":51,"column":7,"nodeType":"791","messageId":"796","endLine":53,"endColumn":8},{"ruleId":"789","severity":1,"message":"795","line":56,"column":7,"nodeType":"791","messageId":"796","endLine":58,"endColumn":8},{"ruleId":"775","severity":1,"message":"776","line":59,"column":14,"nodeType":"777","endLine":59,"endColumn":51},{"ruleId":"789","severity":1,"message":"795","line":61,"column":7,"nodeType":"791","messageId":"796","endLine":63,"endColumn":8},{"ruleId":"760","severity":1,"message":"761","line":77,"column":6,"nodeType":"762","endLine":77,"endColumn":8,"suggestions":"797"},{"ruleId":"775","severity":1,"message":"776","line":28,"column":13,"nodeType":"777","endLine":28,"endColumn":35},{"ruleId":"760","severity":1,"message":"793","line":34,"column":6,"nodeType":"762","endLine":34,"endColumn":19,"suggestions":"798"},{"ruleId":"760","severity":1,"message":"793","line":29,"column":6,"nodeType":"762","endLine":29,"endColumn":19,"suggestions":"799"},{"ruleId":"768","severity":1,"message":"769","line":33,"column":26,"nodeType":"770","messageId":"771","endLine":33,"endColumn":28},{"ruleId":"760","severity":1,"message":"793","line":47,"column":6,"nodeType":"762","endLine":47,"endColumn":19,"suggestions":"800"},{"ruleId":"801","severity":1,"message":"802","line":13,"column":8,"nodeType":"803","messageId":"804","endLine":13,"endColumn":17},{"ruleId":"801","severity":1,"message":"805","line":19,"column":10,"nodeType":"803","messageId":"804","endLine":19,"endColumn":22},{"ruleId":"764","replacedBy":"806"},{"ruleId":"766","replacedBy":"807"},{"ruleId":"768","severity":1,"message":"769","line":8,"column":18,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"782","severity":1,"message":"783","line":32,"column":13,"nodeType":"777","endLine":32,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":46,"column":13,"nodeType":"777","endLine":46,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":59,"column":13,"nodeType":"777","endLine":59,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":72,"column":13,"nodeType":"777","endLine":72,"endColumn":16},{"ruleId":"808","severity":1,"message":"809","line":18,"column":1,"nodeType":"810","endLine":21,"endColumn":3},{"ruleId":"764","replacedBy":"811"},{"ruleId":"766","replacedBy":"812"},{"ruleId":"801","severity":1,"message":"813","line":13,"column":10,"nodeType":"803","messageId":"804","endLine":13,"endColumn":23},{"ruleId":"801","severity":1,"message":"814","line":24,"column":9,"nodeType":"803","messageId":"804","endLine":24,"endColumn":17},{"ruleId":"760","severity":1,"message":"815","line":42,"column":6,"nodeType":"762","endLine":42,"endColumn":26,"suggestions":"816"},{"ruleId":"768","severity":1,"message":"769","line":8,"column":17,"nodeType":"770","messageId":"771","endLine":8,"endColumn":19},{"ruleId":"801","severity":1,"message":"817","line":6,"column":17,"nodeType":"803","messageId":"804","endLine":6,"endColumn":25},{"ruleId":"801","severity":1,"message":"818","line":27,"column":10,"nodeType":"803","messageId":"804","endLine":27,"endColumn":19},{"ruleId":"760","severity":1,"message":"793","line":91,"column":6,"nodeType":"762","endLine":91,"endColumn":17,"suggestions":"819"},{"ruleId":"820","severity":1,"message":"821","line":13,"column":27,"nodeType":"822","messageId":"771","endLine":13,"endColumn":29},{"ruleId":"801","severity":1,"message":"805","line":19,"column":10,"nodeType":"803","messageId":"804","endLine":19,"endColumn":22},{"ruleId":"801","severity":1,"message":"813","line":13,"column":10,"nodeType":"803","messageId":"804","endLine":13,"endColumn":23},{"ruleId":"801","severity":1,"message":"814","line":24,"column":9,"nodeType":"803","messageId":"804","endLine":24,"endColumn":17},{"ruleId":"768","severity":1,"message":"769","line":8,"column":18,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"760","severity":1,"message":"793","line":47,"column":6,"nodeType":"762","endLine":47,"endColumn":19,"suggestions":"823"},{"ruleId":"760","severity":1,"message":"793","line":34,"column":6,"nodeType":"762","endLine":34,"endColumn":19,"suggestions":"824"},{"ruleId":"801","severity":1,"message":"805","line":19,"column":10,"nodeType":"803","messageId":"804","endLine":19,"endColumn":22},{"ruleId":"764","replacedBy":"825"},{"ruleId":"766","replacedBy":"826"},{"ruleId":"764","replacedBy":"827"},{"ruleId":"766","replacedBy":"828"},{"ruleId":"764","replacedBy":"829"},{"ruleId":"766","replacedBy":"830"},{"ruleId":"764","replacedBy":"831"},{"ruleId":"766","replacedBy":"832"},{"ruleId":"764","replacedBy":"833"},{"ruleId":"766","replacedBy":"834"},{"ruleId":"764","replacedBy":"835"},{"ruleId":"766","replacedBy":"836"},{"ruleId":"801","severity":1,"message":"817","line":6,"column":17,"nodeType":"803","messageId":"804","endLine":6,"endColumn":25},{"ruleId":"764","replacedBy":"837"},{"ruleId":"766","replacedBy":"838"},{"ruleId":"764","replacedBy":"839"},{"ruleId":"766","replacedBy":"840"},{"ruleId":"760","severity":1,"message":"761","line":65,"column":6,"nodeType":"762","endLine":65,"endColumn":8,"suggestions":"841"},{"ruleId":"775","severity":1,"message":"776","line":316,"column":31,"nodeType":"777","endLine":316,"endColumn":79},{"ruleId":"764","replacedBy":"842"},{"ruleId":"766","replacedBy":"843"},{"ruleId":"760","severity":1,"message":"761","line":51,"column":6,"nodeType":"762","endLine":51,"endColumn":8,"suggestions":"844"},{"ruleId":"801","severity":1,"message":"845","line":11,"column":17,"nodeType":"803","messageId":"804","endLine":11,"endColumn":26},{"ruleId":"782","severity":1,"message":"783","line":81,"column":13,"nodeType":"777","endLine":81,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":95,"column":13,"nodeType":"777","endLine":95,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":108,"column":13,"nodeType":"777","endLine":108,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":121,"column":13,"nodeType":"777","endLine":121,"endColumn":16},{"ruleId":"764","replacedBy":"846"},{"ruleId":"766","replacedBy":"847"},{"ruleId":"820","severity":1,"message":"821","line":25,"column":27,"nodeType":"822","messageId":"771","endLine":25,"endColumn":29},{"ruleId":"760","severity":1,"message":"793","line":50,"column":6,"nodeType":"762","endLine":50,"endColumn":19,"suggestions":"848"},{"ruleId":"760","severity":1,"message":"815","line":42,"column":6,"nodeType":"762","endLine":42,"endColumn":26,"suggestions":"849"},{"ruleId":"764","replacedBy":"850"},{"ruleId":"766","replacedBy":"851"},{"ruleId":"760","severity":1,"message":"793","line":34,"column":6,"nodeType":"762","endLine":34,"endColumn":19,"suggestions":"852"},{"ruleId":"764","replacedBy":"853"},{"ruleId":"766","replacedBy":"854"},{"ruleId":"760","severity":1,"message":"786","line":30,"column":6,"nodeType":"762","endLine":30,"endColumn":8,"suggestions":"855"},{"ruleId":"768","severity":1,"message":"769","line":33,"column":26,"nodeType":"770","messageId":"771","endLine":33,"endColumn":28},{"ruleId":"764","replacedBy":"856"},{"ruleId":"766","replacedBy":"857"},{"ruleId":"801","severity":1,"message":"813","line":13,"column":10,"nodeType":"803","messageId":"804","endLine":13,"endColumn":23},{"ruleId":"801","severity":1,"message":"814","line":24,"column":9,"nodeType":"803","messageId":"804","endLine":24,"endColumn":17},{"ruleId":"768","severity":1,"message":"769","line":28,"column":25,"nodeType":"770","messageId":"771","endLine":28,"endColumn":27},{"ruleId":"760","severity":1,"message":"761","line":40,"column":6,"nodeType":"762","endLine":40,"endColumn":18,"suggestions":"858"},{"ruleId":"789","severity":1,"message":"790","line":121,"column":11,"nodeType":"791","messageId":"792","endLine":123,"endColumn":12},{"ruleId":"789","severity":1,"message":"790","line":130,"column":11,"nodeType":"791","messageId":"792","endLine":132,"endColumn":12},{"ruleId":"789","severity":1,"message":"790","line":136,"column":11,"nodeType":"791","messageId":"792","endLine":138,"endColumn":12},{"ruleId":"775","severity":1,"message":"776","line":28,"column":13,"nodeType":"777","endLine":28,"endColumn":35},{"ruleId":"801","severity":1,"message":"818","line":27,"column":10,"nodeType":"803","messageId":"804","endLine":27,"endColumn":19},{"ruleId":"760","severity":1,"message":"793","line":91,"column":6,"nodeType":"762","endLine":91,"endColumn":17,"suggestions":"859"},{"ruleId":"764","replacedBy":"860"},{"ruleId":"766","replacedBy":"861"},{"ruleId":"760","severity":1,"message":"793","line":29,"column":6,"nodeType":"762","endLine":29,"endColumn":19,"suggestions":"862"},{"ruleId":"768","severity":1,"message":"769","line":11,"column":25,"nodeType":"770","messageId":"771","endLine":11,"endColumn":27},{"ruleId":"764","replacedBy":"863"},{"ruleId":"766","replacedBy":"864"},{"ruleId":"764","replacedBy":"865"},{"ruleId":"766","replacedBy":"866"},{"ruleId":"760","severity":1,"message":"793","line":47,"column":6,"nodeType":"762","endLine":47,"endColumn":19,"suggestions":"867"},{"ruleId":"801","severity":1,"message":"868","line":24,"column":33,"nodeType":"803","messageId":"804","endLine":24,"endColumn":37},{"ruleId":"768","severity":1,"message":"769","line":32,"column":23,"nodeType":"770","messageId":"771","endLine":32,"endColumn":25},{"ruleId":"760","severity":1,"message":"869","line":65,"column":6,"nodeType":"762","endLine":65,"endColumn":8,"suggestions":"870"},{"ruleId":"775","severity":1,"message":"776","line":88,"column":9,"nodeType":"777","endLine":88,"endColumn":39},{"ruleId":"764","replacedBy":"871"},{"ruleId":"766","replacedBy":"872"},{"ruleId":"768","severity":1,"message":"769","line":17,"column":29,"nodeType":"770","messageId":"771","endLine":17,"endColumn":31},{"ruleId":"782","severity":1,"message":"783","line":65,"column":15,"nodeType":"777","endLine":65,"endColumn":18},{"ruleId":"764","replacedBy":"873"},{"ruleId":"766","replacedBy":"874"},{"ruleId":"760","severity":1,"message":"780","line":38,"column":6,"nodeType":"762","endLine":38,"endColumn":8,"suggestions":"875"},{"ruleId":"801","severity":1,"message":"802","line":13,"column":8,"nodeType":"803","messageId":"804","endLine":13,"endColumn":17},{"ruleId":"801","severity":1,"message":"817","line":4,"column":17,"nodeType":"803","messageId":"804","endLine":4,"endColumn":25},{"ruleId":"801","severity":1,"message":"876","line":4,"column":27,"nodeType":"803","messageId":"804","endLine":4,"endColumn":36},{"ruleId":"775","severity":1,"message":"776","line":16,"column":13,"nodeType":"777","endLine":16,"endColumn":36},{"ruleId":"801","severity":1,"message":"817","line":4,"column":17,"nodeType":"803","messageId":"804","endLine":4,"endColumn":25},{"ruleId":"801","severity":1,"message":"876","line":4,"column":27,"nodeType":"803","messageId":"804","endLine":4,"endColumn":36},{"ruleId":"775","severity":1,"message":"776","line":16,"column":13,"nodeType":"777","endLine":16,"endColumn":36},{"ruleId":"801","severity":1,"message":"817","line":4,"column":17,"nodeType":"803","messageId":"804","endLine":4,"endColumn":25},{"ruleId":"801","severity":1,"message":"876","line":4,"column":27,"nodeType":"803","messageId":"804","endLine":4,"endColumn":36},{"ruleId":"775","severity":1,"message":"776","line":15,"column":13,"nodeType":"777","endLine":15,"endColumn":36},{"ruleId":"789","severity":1,"message":"795","line":51,"column":7,"nodeType":"791","messageId":"796","endLine":53,"endColumn":8},{"ruleId":"789","severity":1,"message":"795","line":56,"column":7,"nodeType":"791","messageId":"796","endLine":58,"endColumn":8},{"ruleId":"775","severity":1,"message":"776","line":59,"column":14,"nodeType":"777","endLine":59,"endColumn":51},{"ruleId":"789","severity":1,"message":"795","line":61,"column":7,"nodeType":"791","messageId":"796","endLine":63,"endColumn":8},{"ruleId":"760","severity":1,"message":"761","line":77,"column":6,"nodeType":"762","endLine":77,"endColumn":8,"suggestions":"877"},{"ruleId":"808","severity":1,"message":"809","line":33,"column":1,"nodeType":"810","endLine":36,"endColumn":3},{"ruleId":"768","severity":1,"message":"769","line":8,"column":17,"nodeType":"770","messageId":"771","endLine":8,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["878"],"no-native-reassign",["879"],"no-negated-in-lhs",["880"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["879"],["880"],["881"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["879"],["880"],"React Hook useEffect has missing dependencies: 'dispatch' and 'orderID'. Either include them or remove the dependency array.",["882"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["879"],["880"],"React Hook useEffect has missing dependencies: 'currentUser.id' and 'dispatch'. Either include them or remove the dependency array.",["883"],["884"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["885"],"Block is redundant.","redundantBlock",["886"],["887"],["888"],["889"],"no-unused-vars","'userTypes' is defined but never used.","Identifier","unusedVar","'persistStore' is defined but never used.",["879"],["880"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["879"],["880"],"'attemptLogout' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["890"],"'useState' is defined but never used.","'clearCart' is defined but never used.",["891"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["892"],["893"],["879"],["880"],["879"],["880"],["879"],["880"],["879"],["880"],["879"],["880"],["879"],["880"],["879"],["880"],["879"],["880"],["894"],["879"],["880"],["895"],"'Component' is defined but never used.",["879"],["880"],["896"],["897"],["879"],["880"],["898"],["879"],["880"],["899"],["879"],["880"],["900"],["901"],["879"],["880"],["902"],["879"],["880"],["879"],["880"],["903"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'productID'. Either include them or remove the dependency array.",["904"],["879"],["880"],["879"],["880"],["905"],"'useEffect' is defined but never used.",["906"],{"desc":"907","fix":"908"},"no-global-assign","no-unsafe-negation",{"desc":"907","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"907","fix":"918"},{"desc":"916","fix":"919"},{"desc":"916","fix":"920"},{"desc":"916","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"916","fix":"926"},{"desc":"916","fix":"927"},{"desc":"907","fix":"928"},{"desc":"907","fix":"929"},{"desc":"916","fix":"930"},{"desc":"922","fix":"931"},{"desc":"916","fix":"932"},{"desc":"912","fix":"933"},{"desc":"914","fix":"934"},{"desc":"924","fix":"935"},{"desc":"916","fix":"936"},{"desc":"916","fix":"937"},{"desc":"938","fix":"939"},{"desc":"910","fix":"940"},{"desc":"907","fix":"941"},"Update the dependencies array to be: [dispatch]",{"range":"942","text":"943"},{"range":"944","text":"943"},"Update the dependencies array to be: [dispatch, orderID]",{"range":"945","text":"946"},"Update the dependencies array to be: [currentUser.id, dispatch]",{"range":"947","text":"948"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"949","text":"950"},"Update the dependencies array to be: [currentUser, history]",{"range":"951","text":"952"},{"range":"953","text":"943"},{"range":"954","text":"952"},{"range":"955","text":"952"},{"range":"956","text":"952"},"Update the dependencies array to be: [dispatch, history, sucessfulPassReset]",{"range":"957","text":"958"},"Update the dependencies array to be: [history, itemCount]",{"range":"959","text":"960"},{"range":"961","text":"952"},{"range":"962","text":"952"},{"range":"963","text":"943"},{"range":"964","text":"943"},{"range":"965","text":"952"},{"range":"966","text":"958"},{"range":"967","text":"952"},{"range":"968","text":"948"},{"range":"969","text":"950"},{"range":"970","text":"960"},{"range":"971","text":"952"},{"range":"972","text":"952"},"Update the dependencies array to be: [dispatch, productID]",{"range":"973","text":"974"},{"range":"975","text":"946"},{"range":"976","text":"943"},[2135,2137],"[dispatch]",[1148,1150],[1836,1838],"[dispatch, orderID]",[1085,1087],"[currentUser.id, dispatch]",[1612,1624],"[dispatch, filterType]",[2056,2069],"[currentUser, history]",[1892,1894],[1276,1289],[893,906],[1600,1613],[1501,1521],"[dispatch, history, sucessfulPassReset]",[3383,3394],"[history, itemCount]",[1600,1613],[1276,1289],[2939,2941],[2271,2273],[2056,2069],[1501,1521],[1276,1289],[1085,1087],[1612,1624],[3383,3394],[893,906],[1600,1613],[1961,1963],"[dispatch, productID]",[1836,1838],[1892,1894]]